#include "physcon.h"
#include "gr.h"

using namespace bssn;


/*----------------------------------------------------------------------
 *
 * vector form of RHS
 *
 *----------------------------------------------------------------------*/
void physical_constraints(double **uZipConVars, const double **uZipVars,
                       const unsigned int& offset,
                       const double *pmin, const double *pmax,
                       const unsigned int *sz, const unsigned int& bflag)
{

  const unsigned int nx = sz[0];
  const unsigned int ny = sz[1];
  const unsigned int nz = sz[2];
  const unsigned int n = nx * ny * nz;

  double hx = (pmax[0] - pmin[0]) / (nx - 1);
  double hy = (pmax[1] - pmin[1]) / (ny - 1);
  double hz = (pmax[2] - pmin[2]) / (nz - 1);

  double *ham = &uZipConVars[VAR_CONSTRAINT::C_HAM][offset];
  double *mom0 = &uZipConVars[VAR_CONSTRAINT::C_MOM0][offset];
  double *mom1 = &uZipConVars[VAR_CONSTRAINT::C_MOM1][offset];
  double *mom2 = &uZipConVars[VAR_CONSTRAINT::C_MOM2][offset];
  double *psi4_real = &uZipConVars[VAR_CONSTRAINT::C_PSI4_REAL][offset];
  double *psi4_img = &uZipConVars[VAR_CONSTRAINT::C_PSI4_IMG][offset];

  const double *alpha = &uZipVars[VAR::U_ALPHA][offset];
  const double *chi = &uZipVars[VAR::U_CHI][offset];
  const double *K = &uZipVars[VAR::U_K][offset];
  const double *gt0 = &uZipVars[VAR::U_SYMGT0][offset];
  const double *gt1 = &uZipVars[VAR::U_SYMGT1][offset];
  const double *gt2 = &uZipVars[VAR::U_SYMGT2][offset];
  const double *gt3 = &uZipVars[VAR::U_SYMGT3][offset];
  const double *gt4 = &uZipVars[VAR::U_SYMGT4][offset];
  const double *gt5 = &uZipVars[VAR::U_SYMGT5][offset];
  const double *beta0 = &uZipVars[VAR::U_BETA0][offset];
  const double *beta1 = &uZipVars[VAR::U_BETA1][offset];
  const double *beta2 = &uZipVars[VAR::U_BETA2][offset];
  const double *At0 = &uZipVars[VAR::U_SYMAT0][offset];
  const double *At1 = &uZipVars[VAR::U_SYMAT1][offset];
  const double *At2 = &uZipVars[VAR::U_SYMAT2][offset];
  const double *At3 = &uZipVars[VAR::U_SYMAT3][offset];
  const double *At4 = &uZipVars[VAR::U_SYMAT4][offset];
  const double *At5 = &uZipVars[VAR::U_SYMAT5][offset];
  const double *Gt0 = &uZipVars[VAR::U_GT0][offset];
  const double *Gt1 = &uZipVars[VAR::U_GT1][offset];
  const double *Gt2 = &uZipVars[VAR::U_GT2][offset];
  const double *B0 = &uZipVars[VAR::U_B0][offset];
  const double *B1 = &uZipVars[VAR::U_B1][offset];
  const double *B2 = &uZipVars[VAR::U_B2][offset];


//constraint deriv mem alloc
/*[[[cog
import cog
import bssnDerivs as bssnDerivs

for deriv in bssnDerivs.FUNC_CONS:
    cog.outl("\t double* "+deriv+" = (double*)malloc(sizeof(double)*n);")

]]]*/
double* grad_0_chi = (double*)malloc(sizeof(double)*n);
double* grad_1_chi = (double*)malloc(sizeof(double)*n);
double* grad_2_chi = (double*)malloc(sizeof(double)*n);
double* grad_0_Gt0 = (double*)malloc(sizeof(double)*n);
double* grad_1_Gt0 = (double*)malloc(sizeof(double)*n);
double* grad_2_Gt0 = (double*)malloc(sizeof(double)*n);
double* grad_0_Gt1 = (double*)malloc(sizeof(double)*n);
double* grad_1_Gt1 = (double*)malloc(sizeof(double)*n);
double* grad_2_Gt1 = (double*)malloc(sizeof(double)*n);
double* grad_0_Gt2 = (double*)malloc(sizeof(double)*n);
double* grad_1_Gt2 = (double*)malloc(sizeof(double)*n);
double* grad_2_Gt2 = (double*)malloc(sizeof(double)*n);
double* grad_0_K = (double*)malloc(sizeof(double)*n);
double* grad_1_K = (double*)malloc(sizeof(double)*n);
double* grad_2_K = (double*)malloc(sizeof(double)*n);
double* grad_0_gt0 = (double*)malloc(sizeof(double)*n);
double* grad_1_gt0 = (double*)malloc(sizeof(double)*n);
double* grad_2_gt0 = (double*)malloc(sizeof(double)*n);
double* grad_0_gt1 = (double*)malloc(sizeof(double)*n);
double* grad_1_gt1 = (double*)malloc(sizeof(double)*n);
double* grad_2_gt1 = (double*)malloc(sizeof(double)*n);
double* grad_0_gt2 = (double*)malloc(sizeof(double)*n);
double* grad_1_gt2 = (double*)malloc(sizeof(double)*n);
double* grad_2_gt2 = (double*)malloc(sizeof(double)*n);
double* grad_0_gt3 = (double*)malloc(sizeof(double)*n);
double* grad_1_gt3 = (double*)malloc(sizeof(double)*n);
double* grad_2_gt3 = (double*)malloc(sizeof(double)*n);
double* grad_0_gt4 = (double*)malloc(sizeof(double)*n);
double* grad_1_gt4 = (double*)malloc(sizeof(double)*n);
double* grad_2_gt4 = (double*)malloc(sizeof(double)*n);
double* grad_0_gt5 = (double*)malloc(sizeof(double)*n);
double* grad_1_gt5 = (double*)malloc(sizeof(double)*n);
double* grad_2_gt5 = (double*)malloc(sizeof(double)*n);
double* grad_0_At0 = (double*)malloc(sizeof(double)*n);
double* grad_1_At0 = (double*)malloc(sizeof(double)*n);
double* grad_2_At0 = (double*)malloc(sizeof(double)*n);
double* grad_0_At1 = (double*)malloc(sizeof(double)*n);
double* grad_1_At1 = (double*)malloc(sizeof(double)*n);
double* grad_2_At1 = (double*)malloc(sizeof(double)*n);
double* grad_0_At2 = (double*)malloc(sizeof(double)*n);
double* grad_1_At2 = (double*)malloc(sizeof(double)*n);
double* grad_2_At2 = (double*)malloc(sizeof(double)*n);
double* grad_0_At3 = (double*)malloc(sizeof(double)*n);
double* grad_1_At3 = (double*)malloc(sizeof(double)*n);
double* grad_2_At3 = (double*)malloc(sizeof(double)*n);
double* grad_0_At4 = (double*)malloc(sizeof(double)*n);
double* grad_1_At4 = (double*)malloc(sizeof(double)*n);
double* grad_2_At4 = (double*)malloc(sizeof(double)*n);
double* grad_0_At5 = (double*)malloc(sizeof(double)*n);
double* grad_1_At5 = (double*)malloc(sizeof(double)*n);
double* grad_2_At5 = (double*)malloc(sizeof(double)*n);
double* grad2_0_0_gt0 = (double*)malloc(sizeof(double)*n);
double* grad2_0_1_gt0 = (double*)malloc(sizeof(double)*n);
double* grad2_0_2_gt0 = (double*)malloc(sizeof(double)*n);
double* grad2_1_1_gt0 = (double*)malloc(sizeof(double)*n);
double* grad2_1_2_gt0 = (double*)malloc(sizeof(double)*n);
double* grad2_2_2_gt0 = (double*)malloc(sizeof(double)*n);
double* grad2_0_0_gt1 = (double*)malloc(sizeof(double)*n);
double* grad2_0_1_gt1 = (double*)malloc(sizeof(double)*n);
double* grad2_0_2_gt1 = (double*)malloc(sizeof(double)*n);
double* grad2_1_1_gt1 = (double*)malloc(sizeof(double)*n);
double* grad2_1_2_gt1 = (double*)malloc(sizeof(double)*n);
double* grad2_2_2_gt1 = (double*)malloc(sizeof(double)*n);
double* grad2_0_0_gt2 = (double*)malloc(sizeof(double)*n);
double* grad2_0_1_gt2 = (double*)malloc(sizeof(double)*n);
double* grad2_0_2_gt2 = (double*)malloc(sizeof(double)*n);
double* grad2_1_1_gt2 = (double*)malloc(sizeof(double)*n);
double* grad2_1_2_gt2 = (double*)malloc(sizeof(double)*n);
double* grad2_2_2_gt2 = (double*)malloc(sizeof(double)*n);
double* grad2_0_0_gt3 = (double*)malloc(sizeof(double)*n);
double* grad2_0_1_gt3 = (double*)malloc(sizeof(double)*n);
double* grad2_0_2_gt3 = (double*)malloc(sizeof(double)*n);
double* grad2_1_1_gt3 = (double*)malloc(sizeof(double)*n);
double* grad2_1_2_gt3 = (double*)malloc(sizeof(double)*n);
double* grad2_2_2_gt3 = (double*)malloc(sizeof(double)*n);
double* grad2_0_0_gt4 = (double*)malloc(sizeof(double)*n);
double* grad2_0_1_gt4 = (double*)malloc(sizeof(double)*n);
double* grad2_0_2_gt4 = (double*)malloc(sizeof(double)*n);
double* grad2_1_1_gt4 = (double*)malloc(sizeof(double)*n);
double* grad2_1_2_gt4 = (double*)malloc(sizeof(double)*n);
double* grad2_2_2_gt4 = (double*)malloc(sizeof(double)*n);
double* grad2_0_0_gt5 = (double*)malloc(sizeof(double)*n);
double* grad2_0_1_gt5 = (double*)malloc(sizeof(double)*n);
double* grad2_0_2_gt5 = (double*)malloc(sizeof(double)*n);
double* grad2_1_1_gt5 = (double*)malloc(sizeof(double)*n);
double* grad2_1_2_gt5 = (double*)malloc(sizeof(double)*n);
double* grad2_2_2_gt5 = (double*)malloc(sizeof(double)*n);
double* grad2_0_0_chi = (double*)malloc(sizeof(double)*n);
double* grad2_0_1_chi = (double*)malloc(sizeof(double)*n);
double* grad2_0_2_chi = (double*)malloc(sizeof(double)*n);
double* grad2_1_1_chi = (double*)malloc(sizeof(double)*n);
double* grad2_1_2_chi = (double*)malloc(sizeof(double)*n);
double* grad2_2_2_chi = (double*)malloc(sizeof(double)*n);
//[[[end]]]
  
//compute constraint derivs.
/*[[[cog
import cog
import bssnDerivs as bssnDerivs

for var in bssnDerivs.CONSTRAINT_D:
    cog.outl("\t deriv_x(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_D[0] + var ,var))
    cog.outl("\t deriv_y(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_D[1] + var ,var))
    cog.outl("\t deriv_z(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_D[2] + var ,var))
    
    if var in bssnDerivs.CONSTRAINT_D:
        cog.outl("\t deriv_xx(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_DD[0] + var ,var))
        cog.outl("\t deriv_y(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_DD[1] + var , bssnDerivs.PREFIX_D[0] + var ))
        cog.outl("\t deriv_z(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_DD[2] + var , bssnDerivs.PREFIX_D[0] + var ))
        
        cog.outl("\t deriv_yy(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_DD[3] + var ,var))
        cog.outl("\t deriv_z(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_DD[4] + var , bssnDerivs.PREFIX_D[1] + var))
        
        cog.outl("\t deriv_zz(%s, %s, hx, sz, bflag);" %(bssnDerivs.PREFIX_DD[5] + var ,var))
    


]]]*/
deriv_x(grad_0_chi, chi, hx, sz, bflag);
deriv_y(grad_1_chi, chi, hx, sz, bflag);
deriv_z(grad_2_chi, chi, hx, sz, bflag);
deriv_xx(grad2_0_0_chi, chi, hx, sz, bflag);
deriv_y(grad2_0_1_chi, grad_0_chi, hx, sz, bflag);
deriv_z(grad2_0_2_chi, grad_0_chi, hx, sz, bflag);
deriv_yy(grad2_1_1_chi, chi, hx, sz, bflag);
deriv_z(grad2_1_2_chi, grad_1_chi, hx, sz, bflag);
deriv_zz(grad2_2_2_chi, chi, hx, sz, bflag);
deriv_x(grad_0_Gt0, Gt0, hx, sz, bflag);
deriv_y(grad_1_Gt0, Gt0, hx, sz, bflag);
deriv_z(grad_2_Gt0, Gt0, hx, sz, bflag);
deriv_xx(grad2_0_0_Gt0, Gt0, hx, sz, bflag);
deriv_y(grad2_0_1_Gt0, grad_0_Gt0, hx, sz, bflag);
deriv_z(grad2_0_2_Gt0, grad_0_Gt0, hx, sz, bflag);
deriv_yy(grad2_1_1_Gt0, Gt0, hx, sz, bflag);
deriv_z(grad2_1_2_Gt0, grad_1_Gt0, hx, sz, bflag);
deriv_zz(grad2_2_2_Gt0, Gt0, hx, sz, bflag);
deriv_x(grad_0_Gt1, Gt1, hx, sz, bflag);
deriv_y(grad_1_Gt1, Gt1, hx, sz, bflag);
deriv_z(grad_2_Gt1, Gt1, hx, sz, bflag);
deriv_xx(grad2_0_0_Gt1, Gt1, hx, sz, bflag);
deriv_y(grad2_0_1_Gt1, grad_0_Gt1, hx, sz, bflag);
deriv_z(grad2_0_2_Gt1, grad_0_Gt1, hx, sz, bflag);
deriv_yy(grad2_1_1_Gt1, Gt1, hx, sz, bflag);
deriv_z(grad2_1_2_Gt1, grad_1_Gt1, hx, sz, bflag);
deriv_zz(grad2_2_2_Gt1, Gt1, hx, sz, bflag);
deriv_x(grad_0_Gt2, Gt2, hx, sz, bflag);
deriv_y(grad_1_Gt2, Gt2, hx, sz, bflag);
deriv_z(grad_2_Gt2, Gt2, hx, sz, bflag);
deriv_xx(grad2_0_0_Gt2, Gt2, hx, sz, bflag);
deriv_y(grad2_0_1_Gt2, grad_0_Gt2, hx, sz, bflag);
deriv_z(grad2_0_2_Gt2, grad_0_Gt2, hx, sz, bflag);
deriv_yy(grad2_1_1_Gt2, Gt2, hx, sz, bflag);
deriv_z(grad2_1_2_Gt2, grad_1_Gt2, hx, sz, bflag);
deriv_zz(grad2_2_2_Gt2, Gt2, hx, sz, bflag);
deriv_x(grad_0_K, K, hx, sz, bflag);
deriv_y(grad_1_K, K, hx, sz, bflag);
deriv_z(grad_2_K, K, hx, sz, bflag);
deriv_xx(grad2_0_0_K, K, hx, sz, bflag);
deriv_y(grad2_0_1_K, grad_0_K, hx, sz, bflag);
deriv_z(grad2_0_2_K, grad_0_K, hx, sz, bflag);
deriv_yy(grad2_1_1_K, K, hx, sz, bflag);
deriv_z(grad2_1_2_K, grad_1_K, hx, sz, bflag);
deriv_zz(grad2_2_2_K, K, hx, sz, bflag);
deriv_x(grad_0_gt0, gt0, hx, sz, bflag);
deriv_y(grad_1_gt0, gt0, hx, sz, bflag);
deriv_z(grad_2_gt0, gt0, hx, sz, bflag);
deriv_xx(grad2_0_0_gt0, gt0, hx, sz, bflag);
deriv_y(grad2_0_1_gt0, grad_0_gt0, hx, sz, bflag);
deriv_z(grad2_0_2_gt0, grad_0_gt0, hx, sz, bflag);
deriv_yy(grad2_1_1_gt0, gt0, hx, sz, bflag);
deriv_z(grad2_1_2_gt0, grad_1_gt0, hx, sz, bflag);
deriv_zz(grad2_2_2_gt0, gt0, hx, sz, bflag);
deriv_x(grad_0_gt1, gt1, hx, sz, bflag);
deriv_y(grad_1_gt1, gt1, hx, sz, bflag);
deriv_z(grad_2_gt1, gt1, hx, sz, bflag);
deriv_xx(grad2_0_0_gt1, gt1, hx, sz, bflag);
deriv_y(grad2_0_1_gt1, grad_0_gt1, hx, sz, bflag);
deriv_z(grad2_0_2_gt1, grad_0_gt1, hx, sz, bflag);
deriv_yy(grad2_1_1_gt1, gt1, hx, sz, bflag);
deriv_z(grad2_1_2_gt1, grad_1_gt1, hx, sz, bflag);
deriv_zz(grad2_2_2_gt1, gt1, hx, sz, bflag);
deriv_x(grad_0_gt2, gt2, hx, sz, bflag);
deriv_y(grad_1_gt2, gt2, hx, sz, bflag);
deriv_z(grad_2_gt2, gt2, hx, sz, bflag);
deriv_xx(grad2_0_0_gt2, gt2, hx, sz, bflag);
deriv_y(grad2_0_1_gt2, grad_0_gt2, hx, sz, bflag);
deriv_z(grad2_0_2_gt2, grad_0_gt2, hx, sz, bflag);
deriv_yy(grad2_1_1_gt2, gt2, hx, sz, bflag);
deriv_z(grad2_1_2_gt2, grad_1_gt2, hx, sz, bflag);
deriv_zz(grad2_2_2_gt2, gt2, hx, sz, bflag);
deriv_x(grad_0_gt3, gt3, hx, sz, bflag);
deriv_y(grad_1_gt3, gt3, hx, sz, bflag);
deriv_z(grad_2_gt3, gt3, hx, sz, bflag);
deriv_xx(grad2_0_0_gt3, gt3, hx, sz, bflag);
deriv_y(grad2_0_1_gt3, grad_0_gt3, hx, sz, bflag);
deriv_z(grad2_0_2_gt3, grad_0_gt3, hx, sz, bflag);
deriv_yy(grad2_1_1_gt3, gt3, hx, sz, bflag);
deriv_z(grad2_1_2_gt3, grad_1_gt3, hx, sz, bflag);
deriv_zz(grad2_2_2_gt3, gt3, hx, sz, bflag);
deriv_x(grad_0_gt4, gt4, hx, sz, bflag);
deriv_y(grad_1_gt4, gt4, hx, sz, bflag);
deriv_z(grad_2_gt4, gt4, hx, sz, bflag);
deriv_xx(grad2_0_0_gt4, gt4, hx, sz, bflag);
deriv_y(grad2_0_1_gt4, grad_0_gt4, hx, sz, bflag);
deriv_z(grad2_0_2_gt4, grad_0_gt4, hx, sz, bflag);
deriv_yy(grad2_1_1_gt4, gt4, hx, sz, bflag);
deriv_z(grad2_1_2_gt4, grad_1_gt4, hx, sz, bflag);
deriv_zz(grad2_2_2_gt4, gt4, hx, sz, bflag);
deriv_x(grad_0_gt5, gt5, hx, sz, bflag);
deriv_y(grad_1_gt5, gt5, hx, sz, bflag);
deriv_z(grad_2_gt5, gt5, hx, sz, bflag);
deriv_xx(grad2_0_0_gt5, gt5, hx, sz, bflag);
deriv_y(grad2_0_1_gt5, grad_0_gt5, hx, sz, bflag);
deriv_z(grad2_0_2_gt5, grad_0_gt5, hx, sz, bflag);
deriv_yy(grad2_1_1_gt5, gt5, hx, sz, bflag);
deriv_z(grad2_1_2_gt5, grad_1_gt5, hx, sz, bflag);
deriv_zz(grad2_2_2_gt5, gt5, hx, sz, bflag);
deriv_x(grad_0_At0, At0, hx, sz, bflag);
deriv_y(grad_1_At0, At0, hx, sz, bflag);
deriv_z(grad_2_At0, At0, hx, sz, bflag);
deriv_xx(grad2_0_0_At0, At0, hx, sz, bflag);
deriv_y(grad2_0_1_At0, grad_0_At0, hx, sz, bflag);
deriv_z(grad2_0_2_At0, grad_0_At0, hx, sz, bflag);
deriv_yy(grad2_1_1_At0, At0, hx, sz, bflag);
deriv_z(grad2_1_2_At0, grad_1_At0, hx, sz, bflag);
deriv_zz(grad2_2_2_At0, At0, hx, sz, bflag);
deriv_x(grad_0_At1, At1, hx, sz, bflag);
deriv_y(grad_1_At1, At1, hx, sz, bflag);
deriv_z(grad_2_At1, At1, hx, sz, bflag);
deriv_xx(grad2_0_0_At1, At1, hx, sz, bflag);
deriv_y(grad2_0_1_At1, grad_0_At1, hx, sz, bflag);
deriv_z(grad2_0_2_At1, grad_0_At1, hx, sz, bflag);
deriv_yy(grad2_1_1_At1, At1, hx, sz, bflag);
deriv_z(grad2_1_2_At1, grad_1_At1, hx, sz, bflag);
deriv_zz(grad2_2_2_At1, At1, hx, sz, bflag);
deriv_x(grad_0_At2, At2, hx, sz, bflag);
deriv_y(grad_1_At2, At2, hx, sz, bflag);
deriv_z(grad_2_At2, At2, hx, sz, bflag);
deriv_xx(grad2_0_0_At2, At2, hx, sz, bflag);
deriv_y(grad2_0_1_At2, grad_0_At2, hx, sz, bflag);
deriv_z(grad2_0_2_At2, grad_0_At2, hx, sz, bflag);
deriv_yy(grad2_1_1_At2, At2, hx, sz, bflag);
deriv_z(grad2_1_2_At2, grad_1_At2, hx, sz, bflag);
deriv_zz(grad2_2_2_At2, At2, hx, sz, bflag);
deriv_x(grad_0_At3, At3, hx, sz, bflag);
deriv_y(grad_1_At3, At3, hx, sz, bflag);
deriv_z(grad_2_At3, At3, hx, sz, bflag);
deriv_xx(grad2_0_0_At3, At3, hx, sz, bflag);
deriv_y(grad2_0_1_At3, grad_0_At3, hx, sz, bflag);
deriv_z(grad2_0_2_At3, grad_0_At3, hx, sz, bflag);
deriv_yy(grad2_1_1_At3, At3, hx, sz, bflag);
deriv_z(grad2_1_2_At3, grad_1_At3, hx, sz, bflag);
deriv_zz(grad2_2_2_At3, At3, hx, sz, bflag);
deriv_x(grad_0_At4, At4, hx, sz, bflag);
deriv_y(grad_1_At4, At4, hx, sz, bflag);
deriv_z(grad_2_At4, At4, hx, sz, bflag);
deriv_xx(grad2_0_0_At4, At4, hx, sz, bflag);
deriv_y(grad2_0_1_At4, grad_0_At4, hx, sz, bflag);
deriv_z(grad2_0_2_At4, grad_0_At4, hx, sz, bflag);
deriv_yy(grad2_1_1_At4, At4, hx, sz, bflag);
deriv_z(grad2_1_2_At4, grad_1_At4, hx, sz, bflag);
deriv_zz(grad2_2_2_At4, At4, hx, sz, bflag);
deriv_x(grad_0_At5, At5, hx, sz, bflag);
deriv_y(grad_1_At5, At5, hx, sz, bflag);
deriv_z(grad_2_At5, At5, hx, sz, bflag);
deriv_xx(grad2_0_0_At5, At5, hx, sz, bflag);
deriv_y(grad2_0_1_At5, grad_0_At5, hx, sz, bflag);
deriv_z(grad2_0_2_At5, grad_0_At5, hx, sz, bflag);
deriv_yy(grad2_1_1_At5, At5, hx, sz, bflag);
deriv_z(grad2_1_2_At5, grad_1_At5, hx, sz, bflag);
deriv_zz(grad2_2_2_At5, At5, hx, sz, bflag);
//[[[end]]]

// enforce hamiltonian and momentum constraints
  for (unsigned int k = 3; k < nz - 3; k++) {
    double z = pmin[2] + k*hz;
    for (unsigned int j = 3; j < ny - 3; j++) {
      double y = pmin[1] + j*hy;
      for (unsigned int i = 3; i < nx - 3; i++) {
        double x = pmin[0] + i*hx;
        unsigned int pp = i + nx * (j + ny * k);
//#include "physconeqs.cpp"
/*[[[cog
import dendro
import constraints

outs = [constraints.psi4_real, constraints.psi4_img, constraints.ham, constraints.mom]
vnames = ['psi4_real', 'psi4_img', 'ham', 'mom']
dendro.generate_cpu(outs, vnames, '[pp]')

]]]*/
// Dendro: {{{ 
// Dendro: original ops: 1297738 
// Dendro: printing temp variables
double DENDRO_0 = pow(x, 2);
double DENDRO_1 = pow(z, 2);
double DENDRO_2 = DENDRO_0*gt0[pp];
double DENDRO_3 = pow(y, 2);
double DENDRO_4 = DENDRO_3*gt3[pp];
double DENDRO_5 = x*y;
double DENDRO_6 = 2*gt1[pp];
double DENDRO_7 = DENDRO_5*DENDRO_6;
double DENDRO_8 = DENDRO_0 + DENDRO_3;
double DENDRO_9 = gt2[pp]*x;
double DENDRO_10 = DENDRO_8*DENDRO_9;
double DENDRO_11 = 2*z;
double DENDRO_12 = gt4[pp]*y;
double DENDRO_13 = DENDRO_12*DENDRO_8;
double DENDRO_14 = DENDRO_1*gt5[pp] + DENDRO_11*DENDRO_12 + DENDRO_11*DENDRO_9 + DENDRO_2 + DENDRO_4 + DENDRO_7;
double DENDRO_15 = 1.0/DENDRO_14;
double DENDRO_16 = DENDRO_1*DENDRO_12 + DENDRO_1*DENDRO_9 - DENDRO_10 - DENDRO_13 + DENDRO_2*z + DENDRO_4*z + DENDRO_7*z - DENDRO_8*gt5[pp]*z;
double DENDRO_17 = DENDRO_1*DENDRO_2 + DENDRO_1*DENDRO_4 + DENDRO_1*DENDRO_7 - DENDRO_10*DENDRO_11 - DENDRO_11*DENDRO_13 - DENDRO_15*pow(DENDRO_16, 2) + pow(DENDRO_8, 2)*gt5[pp];
double DENDRO_18 = 1.0/DENDRO_17;
double DENDRO_19 = DENDRO_15*DENDRO_16;
double DENDRO_20 = -DENDRO_19 + z;
double DENDRO_21 = DENDRO_18*pow(DENDRO_20, 2);
double DENDRO_22 = DENDRO_5*gt0[pp];
double DENDRO_23 = gt2[pp]*y;
double DENDRO_24 = DENDRO_23*z;
double DENDRO_25 = DENDRO_3*gt1[pp];
double DENDRO_26 = DENDRO_5*gt3[pp];
double DENDRO_27 = gt4[pp]*x;
double DENDRO_28 = DENDRO_27*z;
double DENDRO_29 = DENDRO_0*gt1[pp];
double DENDRO_30 = DENDRO_22 + DENDRO_24 + DENDRO_25 - DENDRO_26 - DENDRO_28 - DENDRO_29;
double DENDRO_31 = DENDRO_20*DENDRO_22;
double DENDRO_32 = DENDRO_20*DENDRO_25;
double DENDRO_33 = DENDRO_20*DENDRO_26;
double DENDRO_34 = DENDRO_20*DENDRO_29;
double DENDRO_35 = DENDRO_19*z + DENDRO_8;
double DENDRO_36 = DENDRO_27*DENDRO_35;
double DENDRO_37 = DENDRO_23*DENDRO_35;
double DENDRO_38 = DENDRO_31 + DENDRO_32 - DENDRO_33 - DENDRO_34 + DENDRO_36 - DENDRO_37;
double DENDRO_39 = DENDRO_3*gt0[pp];
double DENDRO_40 = DENDRO_0*gt3[pp];
double DENDRO_41 = -DENDRO_39 - DENDRO_40 + DENDRO_7;
double DENDRO_42 = 1.0/(DENDRO_15*pow(DENDRO_30, 2) + DENDRO_18*pow(DENDRO_38, 2) + DENDRO_41);
double DENDRO_43 = DENDRO_15*DENDRO_30;
double DENDRO_44 = DENDRO_20*x;
double DENDRO_45 = DENDRO_18*DENDRO_38;
double DENDRO_46 = -DENDRO_43*x - DENDRO_44*DENDRO_45 + y;
double DENDRO_47 = DENDRO_0*DENDRO_21 + DENDRO_42*pow(DENDRO_46, 2);
double DENDRO_48 = grad2_0_0_chi[pp];
double DENDRO_49 = -DENDRO_48;
double DENDRO_50 = grad_2_chi[pp];
double DENDRO_51 = gt1[pp]*gt4[pp];
double DENDRO_52 = gt2[pp]*gt3[pp];
double DENDRO_53 = DENDRO_51 - DENDRO_52;
double DENDRO_54 = grad_0_gt0[pp];
double DENDRO_55 = 0.5*DENDRO_54;
double DENDRO_56 = DENDRO_53*DENDRO_55;
double DENDRO_57 = gt0[pp]*gt4[pp] - gt1[pp]*gt2[pp];
double DENDRO_58 = grad_0_gt1[pp];
double DENDRO_59 = 1.0*DENDRO_58;
double DENDRO_60 = grad_1_gt0[pp];
double DENDRO_61 = 0.5*DENDRO_60;
double DENDRO_62 = DENDRO_59 - DENDRO_61;
double DENDRO_63 = DENDRO_57*DENDRO_62;
double DENDRO_64 = gt0[pp]*gt3[pp];
double DENDRO_65 = pow(gt1[pp], 2);
double DENDRO_66 = DENDRO_64 - DENDRO_65;
double DENDRO_67 = grad_0_gt2[pp];
double DENDRO_68 = 1.0*DENDRO_67;
double DENDRO_69 = grad_2_gt0[pp];
double DENDRO_70 = 0.5*DENDRO_69;
double DENDRO_71 = DENDRO_68 - DENDRO_70;
double DENDRO_72 = DENDRO_66*DENDRO_71;
double DENDRO_73 = -DENDRO_56 + DENDRO_63 - DENDRO_72;
double DENDRO_74 = pow(gt4[pp], 2);
double DENDRO_75 = pow(gt2[pp], 2);
double DENDRO_76 = gt0[pp]*gt5[pp];
double DENDRO_77 = gt2[pp]*gt4[pp];
double DENDRO_78 = -DENDRO_6*DENDRO_77 + DENDRO_65*gt5[pp] + DENDRO_74*gt0[pp] + DENDRO_75*gt3[pp] - DENDRO_76*gt3[pp];
double DENDRO_79 = 1.0/DENDRO_78;
double DENDRO_80 = DENDRO_73*DENDRO_79;
double DENDRO_81 = grad_1_chi[pp];
double DENDRO_82 = -DENDRO_75 + DENDRO_76;
double DENDRO_83 = -DENDRO_77 + gt1[pp]*gt5[pp];
double DENDRO_84 = DENDRO_55*DENDRO_83 + DENDRO_57*DENDRO_71;
double DENDRO_85 = -DENDRO_62*DENDRO_82 + DENDRO_84;
double DENDRO_86 = DENDRO_79*DENDRO_85;
double DENDRO_87 = grad_0_chi[pp];
double DENDRO_88 = gt3[pp]*gt5[pp];
double DENDRO_89 = -DENDRO_74 + DENDRO_88;
double DENDRO_90 = DENDRO_55*DENDRO_89;
double DENDRO_91 = DENDRO_62*DENDRO_83;
double DENDRO_92 = DENDRO_53*DENDRO_71;
double DENDRO_93 = -DENDRO_90 + DENDRO_91 - DENDRO_92;
double DENDRO_94 = DENDRO_79*DENDRO_93;
double DENDRO_95 = 1.0/chi[pp];
double DENDRO_96 = 2*DENDRO_95;
double DENDRO_97 = grad_0_gt3[pp];
double DENDRO_98 = 0.5*DENDRO_97;
double DENDRO_99 = grad_1_gt1[pp];
double DENDRO_100 = 1.0*DENDRO_99;
double DENDRO_101 = -DENDRO_100;
double DENDRO_102 = DENDRO_101 + DENDRO_98;
double DENDRO_103 = grad_0_gt4[pp];
double DENDRO_104 = grad_2_gt1[pp];
double DENDRO_105 = grad_1_gt2[pp];
double DENDRO_106 = DENDRO_103 + DENDRO_104 - DENDRO_105;
double DENDRO_107 = grad_0_gt5[pp];
double DENDRO_108 = DENDRO_107*DENDRO_57 + DENDRO_69*DENDRO_83;
double DENDRO_109 = -DENDRO_106*DENDRO_82 + DENDRO_108;
double DENDRO_110 = DENDRO_102*DENDRO_109;
double DENDRO_111 = DENDRO_103 - DENDRO_104 + DENDRO_105;
double DENDRO_112 = DENDRO_111*DENDRO_57 + DENDRO_60*DENDRO_83;
double DENDRO_113 = DENDRO_112 - DENDRO_82*DENDRO_97;
double DENDRO_114 = DENDRO_106*DENDRO_113;
double DENDRO_115 = 0.25*DENDRO_114;
double DENDRO_116 = pow(DENDRO_78, -2);
double DENDRO_117 = DENDRO_116*DENDRO_57;
double DENDRO_118 = 4*DENDRO_117;
double DENDRO_119 = 0.5*DENDRO_107;
double DENDRO_120 = grad_2_gt2[pp];
double DENDRO_121 = 1.0*DENDRO_120;
double DENDRO_122 = -DENDRO_121;
double DENDRO_123 = DENDRO_119 + DENDRO_122;
double DENDRO_124 = DENDRO_57*DENDRO_97;
double DENDRO_125 = DENDRO_53*DENDRO_60;
double DENDRO_126 = DENDRO_111*DENDRO_66;
double DENDRO_127 = DENDRO_124 - DENDRO_125 - DENDRO_126;
double DENDRO_128 = DENDRO_123*DENDRO_127;
double DENDRO_129 = DENDRO_53*DENDRO_69;
double DENDRO_130 = DENDRO_107*DENDRO_66;
double DENDRO_131 = DENDRO_106*DENDRO_57;
double DENDRO_132 = -DENDRO_129 - DENDRO_130 + DENDRO_131;
double DENDRO_133 = DENDRO_111*DENDRO_132;
double DENDRO_134 = 0.25*DENDRO_133;
double DENDRO_135 = -DENDRO_134;
double DENDRO_136 = -DENDRO_124 + DENDRO_125 + DENDRO_126;
double DENDRO_137 = 0.25*DENDRO_107;
double DENDRO_138 = DENDRO_136*DENDRO_137;
double DENDRO_139 = DENDRO_129 + DENDRO_130 - DENDRO_131;
double DENDRO_140 = -DENDRO_103 + DENDRO_104 + DENDRO_105;
double DENDRO_141 = 0.5*DENDRO_140;
double DENDRO_142 = DENDRO_83*DENDRO_97;
double DENDRO_143 = DENDRO_60*DENDRO_89;
double DENDRO_144 = DENDRO_111*DENDRO_53;
double DENDRO_145 = -DENDRO_142 + DENDRO_143 + DENDRO_144;
double DENDRO_146 = 0.25*DENDRO_69;
double DENDRO_147 = DENDRO_145*DENDRO_146;
double DENDRO_148 = DENDRO_107*DENDRO_53;
double DENDRO_149 = DENDRO_69*DENDRO_89;
double DENDRO_150 = DENDRO_106*DENDRO_83;
double DENDRO_151 = DENDRO_148 + DENDRO_149 - DENDRO_150;
double DENDRO_152 = 0.25*DENDRO_60;
double DENDRO_153 = DENDRO_151*DENDRO_152;
double DENDRO_154 = 0.5*DENDRO_71;
double DENDRO_155 = DENDRO_56 - DENDRO_63 + DENDRO_72;
double DENDRO_156 = 2*DENDRO_123;
double DENDRO_157 = DENDRO_116*DENDRO_53;
double DENDRO_158 = 4*DENDRO_157;
double DENDRO_159 = DENDRO_145*DENDRO_54;
double DENDRO_160 = 0.25*DENDRO_159;
double DENDRO_161 = DENDRO_90 - DENDRO_91 + DENDRO_92;
double DENDRO_162 = DENDRO_161*DENDRO_60;
double DENDRO_163 = DENDRO_116*DENDRO_83;
double DENDRO_164 = 4*DENDRO_163;
double DENDRO_165 = DENDRO_151*DENDRO_54;
double DENDRO_166 = 0.25*DENDRO_165;
double DENDRO_167 = DENDRO_161*DENDRO_69;
double DENDRO_168 = DENDRO_107*DENDRO_155;
double DENDRO_169 = 2.0*DENDRO_157;
double DENDRO_170 = DENDRO_111*DENDRO_155;
double DENDRO_171 = 2.0*DENDRO_163;
double DENDRO_172 = DENDRO_109*DENDRO_53;
double DENDRO_173 = grad_2_gt3[pp];
double DENDRO_174 = grad_1_gt5[pp];
double DENDRO_175 = DENDRO_140*DENDRO_83 + DENDRO_174*DENDRO_57;
double DENDRO_176 = -DENDRO_173*DENDRO_82 + DENDRO_175;
double DENDRO_177 = DENDRO_176*DENDRO_57;
double DENDRO_178 = DENDRO_113*DENDRO_83;
double DENDRO_179 = grad_2_gt5[pp];
double DENDRO_180 = 0.5*DENDRO_179;
double DENDRO_181 = DENDRO_180*DENDRO_57;
double DENDRO_182 = 0.5*DENDRO_174;
double DENDRO_183 = grad_2_gt4[pp];
double DENDRO_184 = 1.0*DENDRO_183;
double DENDRO_185 = -DENDRO_184;
double DENDRO_186 = DENDRO_182 + DENDRO_185;
double DENDRO_187 = -DENDRO_123*DENDRO_83 + DENDRO_181 + DENDRO_186*DENDRO_82;
double DENDRO_188 = DENDRO_187*DENDRO_66;
double DENDRO_189 = grad_1_gt3[pp];
double DENDRO_190 = 0.5*DENDRO_189;
double DENDRO_191 = DENDRO_190*DENDRO_82;
double DENDRO_192 = grad_1_gt4[pp];
double DENDRO_193 = 1.0*DENDRO_192;
double DENDRO_194 = 0.5*DENDRO_173;
double DENDRO_195 = DENDRO_193 - DENDRO_194;
double DENDRO_196 = DENDRO_195*DENDRO_57;
double DENDRO_197 = DENDRO_102*DENDRO_83;
double DENDRO_198 = -DENDRO_191 + DENDRO_196 - DENDRO_197;
double DENDRO_199 = DENDRO_198*DENDRO_82;
double DENDRO_200 = DENDRO_85*DENDRO_89;
double DENDRO_201 = 2.0*DENDRO_116;
double DENDRO_202 = DENDRO_201*(DENDRO_172 - 1.0*DENDRO_177 - 1.0*DENDRO_178 + DENDRO_188 + DENDRO_199 + DENDRO_200);
double DENDRO_203 = -DENDRO_148 - DENDRO_149 + DENDRO_150;
double DENDRO_204 = DENDRO_203*DENDRO_53;
double DENDRO_205 = DENDRO_173*DENDRO_83;
double DENDRO_206 = DENDRO_174*DENDRO_53;
double DENDRO_207 = DENDRO_140*DENDRO_89;
double DENDRO_208 = DENDRO_205 - DENDRO_206 - DENDRO_207;
double DENDRO_209 = DENDRO_208*DENDRO_57;
double DENDRO_210 = DENDRO_142 - DENDRO_143 - DENDRO_144;
double DENDRO_211 = DENDRO_210*DENDRO_83;
double DENDRO_212 = DENDRO_180*DENDRO_53;
double DENDRO_213 = DENDRO_186*DENDRO_83;
double DENDRO_214 = DENDRO_123*DENDRO_89;
double DENDRO_215 = -DENDRO_212 - DENDRO_213 + DENDRO_214;
double DENDRO_216 = DENDRO_215*DENDRO_66;
double DENDRO_217 = DENDRO_190*DENDRO_83;
double DENDRO_218 = DENDRO_102*DENDRO_89 - DENDRO_195*DENDRO_53 + DENDRO_217;
double DENDRO_219 = DENDRO_218*DENDRO_82;
double DENDRO_220 = DENDRO_89*DENDRO_93;
double DENDRO_221 = DENDRO_201*(DENDRO_204 - 1.0*DENDRO_209 - 1.0*DENDRO_211 + DENDRO_216 + DENDRO_219 + DENDRO_220);
double DENDRO_222 = DENDRO_132*DENDRO_53;
double DENDRO_223 = DENDRO_173*DENDRO_57;
double DENDRO_224 = DENDRO_174*DENDRO_66;
double DENDRO_225 = DENDRO_140*DENDRO_53;
double DENDRO_226 = DENDRO_223 - DENDRO_224 - DENDRO_225;
double DENDRO_227 = DENDRO_226*DENDRO_57;
double DENDRO_228 = DENDRO_127*DENDRO_83;
double DENDRO_229 = DENDRO_180*DENDRO_66;
double DENDRO_230 = DENDRO_123*DENDRO_53;
double DENDRO_231 = DENDRO_186*DENDRO_57;
double DENDRO_232 = -DENDRO_229 + DENDRO_230 - DENDRO_231;
double DENDRO_233 = DENDRO_232*DENDRO_66;
double DENDRO_234 = DENDRO_190*DENDRO_57;
double DENDRO_235 = DENDRO_102*DENDRO_53 - DENDRO_195*DENDRO_66 + DENDRO_234;
double DENDRO_236 = DENDRO_235*DENDRO_82;
double DENDRO_237 = DENDRO_73*DENDRO_89;
double DENDRO_238 = DENDRO_201*(DENDRO_222 - 1.0*DENDRO_227 - 1.0*DENDRO_228 + DENDRO_233 + DENDRO_236 + DENDRO_237);
double DENDRO_239 = grad2_2_2_chi[pp];
double DENDRO_240 = pow(DENDRO_50, 2);
double DENDRO_241 = 3*DENDRO_95;
double DENDRO_242 = DENDRO_66*(2*DENDRO_239 - DENDRO_240*DENDRO_241);
double DENDRO_243 = grad2_1_1_chi[pp];
double DENDRO_244 = pow(DENDRO_81, 2);
double DENDRO_245 = DENDRO_82*(-DENDRO_241*DENDRO_244 + 2*DENDRO_243);
double DENDRO_246 = pow(DENDRO_87, 2);
double DENDRO_247 = DENDRO_89*(-DENDRO_241*DENDRO_246 + 2*DENDRO_48);
double DENDRO_248 = grad2_1_2_chi[pp];
double DENDRO_249 = DENDRO_241*DENDRO_50;
double DENDRO_250 = 2*DENDRO_57;
double DENDRO_251 = DENDRO_250*(2*DENDRO_248 - DENDRO_249*DENDRO_81);
double DENDRO_252 = grad2_0_2_chi[pp];
double DENDRO_253 = 2*DENDRO_53;
double DENDRO_254 = DENDRO_253*(-DENDRO_249*DENDRO_87 + 2*DENDRO_252);
double DENDRO_255 = grad2_0_1_chi[pp];
double DENDRO_256 = DENDRO_81*DENDRO_87;
double DENDRO_257 = 2*DENDRO_83;
double DENDRO_258 = DENDRO_257*(-DENDRO_241*DENDRO_256 + 2*DENDRO_255);
double DENDRO_259 = -1.0*DENDRO_172 + DENDRO_177 + DENDRO_178 - DENDRO_188 - DENDRO_199 - DENDRO_200;
double DENDRO_260 = DENDRO_79*DENDRO_81;
double DENDRO_261 = 2*DENDRO_259*DENDRO_260;
double DENDRO_262 = -1.0*DENDRO_222 + DENDRO_227 + DENDRO_228 - DENDRO_233 - DENDRO_236 - DENDRO_237;
double DENDRO_263 = DENDRO_50*DENDRO_79;
double DENDRO_264 = 2*DENDRO_262*DENDRO_263;
double DENDRO_265 = -1.0*DENDRO_204 + DENDRO_209 + DENDRO_211 - DENDRO_216 - DENDRO_219 - DENDRO_220;
double DENDRO_266 = DENDRO_79*DENDRO_87;
double DENDRO_267 = 2*DENDRO_265*DENDRO_266;
double DENDRO_268 = DENDRO_79*DENDRO_95;
double DENDRO_269 = DENDRO_268*(DENDRO_242 + DENDRO_245 + DENDRO_247 - DENDRO_251 + DENDRO_254 - DENDRO_258 + DENDRO_261 + DENDRO_264 + DENDRO_267);
double DENDRO_270 = DENDRO_116*DENDRO_66;
double DENDRO_271 = 4*DENDRO_270;
double DENDRO_272 = DENDRO_132*DENDRO_271;
double DENDRO_273 = 0.25*DENDRO_97;
double DENDRO_274 = DENDRO_116*DENDRO_82;
double DENDRO_275 = 4*DENDRO_274;
double DENDRO_276 = DENDRO_113*DENDRO_275;
double DENDRO_277 = 0.25*DENDRO_103;
double DENDRO_278 = -DENDRO_277;
double DENDRO_279 = 0.75*DENDRO_105;
double DENDRO_280 = 0.25*DENDRO_104;
double DENDRO_281 = DENDRO_275*(DENDRO_278 + DENDRO_279 + DENDRO_280);
double DENDRO_282 = DENDRO_68 + DENDRO_70;
double DENDRO_283 = DENDRO_116*DENDRO_89;
double DENDRO_284 = 4*DENDRO_283;
double DENDRO_285 = DENDRO_151*DENDRO_69;
double DENDRO_286 = 3.0*DENDRO_270;
double DENDRO_287 = DENDRO_145*DENDRO_60;
double DENDRO_288 = 3.0*DENDRO_274;
double DENDRO_289 = 6.0*DENDRO_54;
double DENDRO_290 = pow(chi[pp], -2);
double DENDRO_291 = grad_0_Gt0[pp];
double DENDRO_292 = grad_0_Gt1[pp];
double DENDRO_293 = 4*gt1[pp];
double DENDRO_294 = grad_0_Gt2[pp];
double DENDRO_295 = 4*gt2[pp];
double DENDRO_296 = 0.5*DENDRO_62;
double DENDRO_297 = DENDRO_109*DENDRO_296;
double DENDRO_298 = DENDRO_53*DENDRO_79;
double DENDRO_299 = 4*DENDRO_298;
double DENDRO_300 = DENDRO_109*DENDRO_97;
double DENDRO_301 = 0.25*DENDRO_300;
double DENDRO_302 = DENDRO_113*DENDRO_296;
double DENDRO_303 = DENDRO_66*DENDRO_79;
double DENDRO_304 = 2.0*DENDRO_303;
double DENDRO_305 = DENDRO_79*DENDRO_82;
double DENDRO_306 = 2.0*DENDRO_305;
double DENDRO_307 = DENDRO_79*DENDRO_89;
double DENDRO_308 = 2.0*DENDRO_307;
double DENDRO_309 = DENDRO_85*DENDRO_97;
double DENDRO_310 = DENDRO_106*DENDRO_85;
double DENDRO_311 = DENDRO_57*DENDRO_79;
double DENDRO_312 = 4.0*DENDRO_311;
double DENDRO_313 = DENDRO_79*DENDRO_83;
double DENDRO_314 = 4.0*DENDRO_313;
double DENDRO_315 = 0.25*DENDRO_105;
double DENDRO_316 = 0.75*DENDRO_104;
double DENDRO_317 = 4*DENDRO_116;
double DENDRO_318 = -DENDRO_109*DENDRO_271*(DENDRO_278 + DENDRO_315 + DENDRO_316) + DENDRO_118*(DENDRO_113*DENDRO_141 + DENDRO_301) - DENDRO_158*(DENDRO_140*DENDRO_85 + DENDRO_297) + DENDRO_164*(-2*DENDRO_102*DENDRO_85 + DENDRO_302) - DENDRO_169*(DENDRO_109*DENDRO_60 + DENDRO_310) + DENDRO_171*(DENDRO_113*DENDRO_60 + DENDRO_309) - DENDRO_200*DENDRO_317*(DENDRO_59 + DENDRO_61) - DENDRO_246*DENDRO_290 + 4*DENDRO_291*gt0[pp] + DENDRO_292*DENDRO_293 + DENDRO_294*DENDRO_295 + DENDRO_299*grad2_0_2_gt0[pp] + DENDRO_304*grad2_2_2_gt0[pp] + DENDRO_306*grad2_1_1_gt0[pp] + DENDRO_308*grad2_0_0_gt0[pp] - DENDRO_312*grad2_1_2_gt0[pp] - DENDRO_314*grad2_0_1_gt0[pp];
double DENDRO_319 = 0.12500000000000003*chi[pp];
double DENDRO_320 = DENDRO_20*y;
double DENDRO_321 = DENDRO_320*DENDRO_45 + DENDRO_43*y + x;
double DENDRO_322 = DENDRO_21*DENDRO_3 + pow(DENDRO_321, 2)*DENDRO_42;
double DENDRO_323 = -DENDRO_243;
double DENDRO_324 = DENDRO_235*DENDRO_79;
double DENDRO_325 = DENDRO_198*DENDRO_79;
double DENDRO_326 = DENDRO_218*DENDRO_79;
double DENDRO_327 = -DENDRO_223 + DENDRO_224 + DENDRO_225;
double DENDRO_328 = 0.5*DENDRO_195;
double DENDRO_329 = 2*DENDRO_186*DENDRO_235;
double DENDRO_330 = 0.5*DENDRO_102;
double DENDRO_331 = DENDRO_208*DENDRO_330;
double DENDRO_332 = DENDRO_106*DENDRO_218;
double DENDRO_333 = DENDRO_176*DENDRO_189;
double DENDRO_334 = 0.25*DENDRO_333;
double DENDRO_335 = DENDRO_191 - DENDRO_196 + DENDRO_197;
double DENDRO_336 = DENDRO_173*DENDRO_335;
double DENDRO_337 = DENDRO_127*DENDRO_186;
double DENDRO_338 = DENDRO_111*DENDRO_226;
double DENDRO_339 = 0.25*DENDRO_338;
double DENDRO_340 = -DENDRO_205 + DENDRO_206 + DENDRO_207;
double DENDRO_341 = DENDRO_140*DENDRO_145;
double DENDRO_342 = 0.25*DENDRO_341;
double DENDRO_343 = 0.25*DENDRO_174;
double DENDRO_344 = DENDRO_136*DENDRO_343;
double DENDRO_345 = 0.5*DENDRO_106;
double DENDRO_346 = DENDRO_340*DENDRO_60;
double DENDRO_347 = -DENDRO_136*DENDRO_328;
double DENDRO_348 = DENDRO_106*DENDRO_235;
double DENDRO_349 = DENDRO_145*DENDRO_330;
double DENDRO_350 = 2*DENDRO_218*DENDRO_62;
double DENDRO_351 = DENDRO_113*DENDRO_189;
double DENDRO_352 = 0.25*DENDRO_351;
double DENDRO_353 = DENDRO_335*DENDRO_97;
double DENDRO_354 = DENDRO_340*DENDRO_97;
double DENDRO_355 = DENDRO_140*DENDRO_218;
double DENDRO_356 = 2.0*DENDRO_117;
double DENDRO_357 = DENDRO_174*DENDRO_235;
double DENDRO_358 = DENDRO_111*DENDRO_235;
double DENDRO_359 = DENDRO_145*DENDRO_97;
double DENDRO_360 = DENDRO_218*DENDRO_60;
double DENDRO_361 = DENDRO_226*DENDRO_271;
double DENDRO_362 = -DENDRO_315;
double DENDRO_363 = DENDRO_271*(DENDRO_277 + DENDRO_316 + DENDRO_362);
double DENDRO_364 = -DENDRO_98;
double DENDRO_365 = DENDRO_219*DENDRO_317;
double DENDRO_366 = DENDRO_284*(-DENDRO_152 + DENDRO_59);
double DENDRO_367 = 0.75*DENDRO_103;
double DENDRO_368 = DENDRO_284*(DENDRO_280 + DENDRO_362 + DENDRO_367);
double DENDRO_369 = 6.0*DENDRO_189;
double DENDRO_370 = grad_1_Gt0[pp];
double DENDRO_371 = grad_1_Gt1[pp];
double DENDRO_372 = grad_1_Gt2[pp];
double DENDRO_373 = 4*gt4[pp];
double DENDRO_374 = 0.25*DENDRO_173;
double DENDRO_375 = DENDRO_113*DENDRO_374;
double DENDRO_376 = DENDRO_176*DENDRO_273;
double DENDRO_377 = DENDRO_173*DENDRO_176;
double DENDRO_378 = DENDRO_113*DENDRO_97;
double DENDRO_379 = 3.0*DENDRO_283;
double DENDRO_380 = -DENDRO_158*(DENDRO_113*DENDRO_194 + DENDRO_376) - DENDRO_158*(DENDRO_176*DENDRO_98 + DENDRO_375) - DENDRO_236*DENDRO_317*(DENDRO_193 + DENDRO_194) - DENDRO_244*DENDRO_290 - DENDRO_286*DENDRO_377 + DENDRO_293*DENDRO_370 + DENDRO_299*grad2_0_2_gt3[pp] + DENDRO_304*grad2_2_2_gt3[pp] + DENDRO_306*grad2_1_1_gt3[pp] + DENDRO_308*grad2_0_0_gt3[pp] - DENDRO_312*grad2_1_2_gt3[pp] - DENDRO_314*grad2_0_1_gt3[pp] + 4*DENDRO_371*gt3[pp] + DENDRO_372*DENDRO_373 - DENDRO_378*DENDRO_379;
double DENDRO_381 = DENDRO_18*chi[pp];
double DENDRO_382 = -DENDRO_22 - DENDRO_24 - DENDRO_25 + DENDRO_26 + DENDRO_28 + DENDRO_29;
double DENDRO_383 = DENDRO_15*pow(DENDRO_382, 2);
double DENDRO_384 = -DENDRO_31 - DENDRO_32 + DENDRO_33 + DENDRO_34 - DENDRO_36 + DENDRO_37;
double DENDRO_385 = DENDRO_18*pow(DENDRO_384, 2);
double DENDRO_386 = 1.0/(DENDRO_383 + DENDRO_385 + DENDRO_41);
double DENDRO_387 = DENDRO_15*DENDRO_382;
double DENDRO_388 = chi[pp]*z;
double DENDRO_389 = DENDRO_387*DENDRO_388;
double DENDRO_390 = DENDRO_35*DENDRO_381;
double DENDRO_391 = DENDRO_384*DENDRO_390;
double DENDRO_392 = DENDRO_389 - DENDRO_391;
double DENDRO_393 = pow(DENDRO_35, 2)*DENDRO_381 + DENDRO_386*pow(DENDRO_392, 2)*DENDRO_95;
double DENDRO_394 = -DENDRO_239;
double DENDRO_395 = DENDRO_232*DENDRO_79;
double DENDRO_396 = DENDRO_187*DENDRO_79;
double DENDRO_397 = DENDRO_215*DENDRO_79;
double DENDRO_398 = DENDRO_179*DENDRO_327;
double DENDRO_399 = DENDRO_229 - DENDRO_230 + DENDRO_231;
double DENDRO_400 = DENDRO_174*DENDRO_399;
double DENDRO_401 = 0.5*DENDRO_123;
double DENDRO_402 = DENDRO_208*DENDRO_401;
double DENDRO_403 = DENDRO_111*DENDRO_215;
double DENDRO_404 = DENDRO_151*DENDRO_401;
double DENDRO_405 = DENDRO_212 + DENDRO_213 - DENDRO_214;
double DENDRO_406 = 2*DENDRO_71;
double DENDRO_407 = DENDRO_340*DENDRO_71;
double DENDRO_408 = DENDRO_140*DENDRO_151;
double DENDRO_409 = DENDRO_139*DENDRO_343;
double DENDRO_410 = DENDRO_137*DENDRO_327;
double DENDRO_411 = 0.5*DENDRO_111;
double DENDRO_412 = DENDRO_139*DENDRO_179;
double DENDRO_413 = DENDRO_107*DENDRO_399;
double DENDRO_414 = 0.5*DENDRO_186;
double DENDRO_415 = DENDRO_109*DENDRO_414;
double DENDRO_416 = DENDRO_111*DENDRO_187;
double DENDRO_417 = DENDRO_107*DENDRO_151;
double DENDRO_418 = DENDRO_107*DENDRO_340;
double DENDRO_419 = -DENDRO_119;
double DENDRO_420 = DENDRO_216*DENDRO_317;
double DENDRO_421 = -DENDRO_182;
double DENDRO_422 = DENDRO_188*DENDRO_317;
double DENDRO_423 = -DENDRO_280;
double DENDRO_424 = DENDRO_275*(DENDRO_277 + DENDRO_279 + DENDRO_423);
double DENDRO_425 = DENDRO_284*(-DENDRO_146 + DENDRO_68);
double DENDRO_426 = 6.0*DENDRO_179;
double DENDRO_427 = grad_2_Gt0[pp];
double DENDRO_428 = grad_2_Gt1[pp];
double DENDRO_429 = grad_2_Gt2[pp];
double DENDRO_430 = -DENDRO_176*DENDRO_414;
double DENDRO_431 = DENDRO_109*DENDRO_195;
double DENDRO_432 = DENDRO_106*DENDRO_176;
double DENDRO_433 = 0.25*DENDRO_432;
double DENDRO_434 = DENDRO_109*DENDRO_374;
double DENDRO_435 = DENDRO_174*DENDRO_176;
double DENDRO_436 = DENDRO_173*DENDRO_187;
double DENDRO_437 = DENDRO_109*DENDRO_174;
double DENDRO_438 = DENDRO_106*DENDRO_187;
double DENDRO_439 = -DENDRO_109*DENDRO_284*(DENDRO_315 + DENDRO_367 + DENDRO_423) + DENDRO_118*(2*DENDRO_187*DENDRO_195 + DENDRO_430) + DENDRO_164*(DENDRO_431 + DENDRO_433) + DENDRO_164*(DENDRO_176*DENDRO_411 + DENDRO_434) - DENDRO_169*(DENDRO_437 + DENDRO_438) - DENDRO_176*DENDRO_275*(DENDRO_193 - DENDRO_374) - DENDRO_240*DENDRO_290 + DENDRO_295*DENDRO_427 + DENDRO_299*grad2_0_2_gt5[pp] + DENDRO_304*grad2_2_2_gt5[pp] + DENDRO_306*grad2_1_1_gt5[pp] + DENDRO_308*grad2_0_0_gt5[pp] - DENDRO_312*grad2_1_2_gt5[pp] - DENDRO_314*grad2_0_1_gt5[pp] + DENDRO_356*(DENDRO_435 + DENDRO_436) + DENDRO_373*DENDRO_428 + 4*DENDRO_429*gt5[pp];
double DENDRO_440 = 0.35355339059327379*DENDRO_50;
double DENDRO_441 = DENDRO_35*DENDRO_440;
double DENDRO_442 = 0.35355339059327379*DENDRO_87;
double DENDRO_443 = DENDRO_44*DENDRO_442;
double DENDRO_444 = 0.35355339059327379*DENDRO_81;
double DENDRO_445 = DENDRO_320*DENDRO_444;
double DENDRO_446 = At2[pp]*x + At4[pp]*y + At5[pp]*z;
double DENDRO_447 = DENDRO_35*DENDRO_446;
double DENDRO_448 = pow(DENDRO_14*DENDRO_95, -1.0/2.0);
double DENDRO_449 = 0.70710678118654757*DENDRO_448;
double DENDRO_450 = At0[pp]*x;
double DENDRO_451 = At1[pp]*y + At2[pp]*z + DENDRO_450;
double DENDRO_452 = DENDRO_44*DENDRO_451;
double DENDRO_453 = At3[pp]*y;
double DENDRO_454 = At1[pp]*x + At4[pp]*z + DENDRO_453;
double DENDRO_455 = DENDRO_320*DENDRO_454;
double DENDRO_456 = -DENDRO_447*DENDRO_449 + DENDRO_449*DENDRO_452 + DENDRO_449*DENDRO_455;
double DENDRO_457 = -0.70710678118654757*DENDRO_447 + 0.70710678118654757*DENDRO_452 + 0.70710678118654757*DENDRO_455;
double DENDRO_458 = DENDRO_18*DENDRO_384;
double DENDRO_459 = DENDRO_387*x + DENDRO_44*DENDRO_458 + y;
double DENDRO_460 = DENDRO_451*DENDRO_459;
double DENDRO_461 = DENDRO_449*DENDRO_460;
double DENDRO_462 = DENDRO_387*y;
double DENDRO_463 = DENDRO_320*DENDRO_458;
double DENDRO_464 = DENDRO_462 + DENDRO_463 - x;
double DENDRO_465 = DENDRO_454*DENDRO_464;
double DENDRO_466 = DENDRO_449*DENDRO_465;
double DENDRO_467 = DENDRO_392*DENDRO_95;
double DENDRO_468 = DENDRO_446*DENDRO_467;
double DENDRO_469 = DENDRO_449*DENDRO_468;
double DENDRO_470 = DENDRO_440*DENDRO_467 + DENDRO_442*DENDRO_459 + DENDRO_444*DENDRO_464;
double DENDRO_471 = 0.70710678118654757*DENDRO_460 + 0.70710678118654757*DENDRO_465 + 0.70710678118654757*DENDRO_468;
double DENDRO_472 = -DENDRO_383 - DENDRO_385 + DENDRO_39 + DENDRO_40 - DENDRO_7;
double DENDRO_473 = chi[pp]/DENDRO_472;
double DENDRO_474 = DENDRO_290*DENDRO_448;
double DENDRO_475 = -DENDRO_255;
double DENDRO_476 = 0.5*DENDRO_260;
double DENDRO_477 = 0.5*DENDRO_263;
double DENDRO_478 = 0.5*DENDRO_266;
double DENDRO_479 = DENDRO_340*DENDRO_69;
double DENDRO_480 = DENDRO_106*DENDRO_151;
double DENDRO_481 = DENDRO_218*DENDRO_61;
double DENDRO_482 = DENDRO_141*DENDRO_235;
double DENDRO_483 = DENDRO_132*DENDRO_328;
double DENDRO_484 = 0.5*DENDRO_337;
double DENDRO_485 = DENDRO_123*DENDRO_235;
double DENDRO_486 = 0.25*DENDRO_136;
double DENDRO_487 = DENDRO_132*DENDRO_343;
double DENDRO_488 = DENDRO_226*DENDRO_401;
double DENDRO_489 = DENDRO_132*DENDRO_414;
double DENDRO_490 = 0.5*DENDRO_351;
double DENDRO_491 = DENDRO_102*DENDRO_198;
double DENDRO_492 = 0.25*DENDRO_109;
double DENDRO_493 = DENDRO_189*DENDRO_492;
double DENDRO_494 = DENDRO_375 + DENDRO_493;
double DENDRO_495 = DENDRO_218*DENDRO_70;
double DENDRO_496 = 0.25*DENDRO_106;
double DENDRO_497 = 0.5*DENDRO_128;
double DENDRO_498 = DENDRO_186*DENDRO_73;
double DENDRO_499 = DENDRO_146*DENDRO_327;
double DENDRO_500 = DENDRO_155*DENDRO_182;
double DENDRO_501 = 0.25*DENDRO_139;
double DENDRO_502 = DENDRO_106*DENDRO_501;
double DENDRO_503 = DENDRO_151*DENDRO_296;
double DENDRO_504 = 0.25*DENDRO_340;
double DENDRO_505 = DENDRO_141*DENDRO_161 + DENDRO_504*DENDRO_54;
double DENDRO_506 = DENDRO_147 + DENDRO_153;
double DENDRO_507 = DENDRO_218*DENDRO_55;
double DENDRO_508 = DENDRO_235*DENDRO_70;
double DENDRO_509 = DENDRO_190*DENDRO_85;
double DENDRO_510 = DENDRO_113*DENDRO_273 + DENDRO_509;
double DENDRO_511 = DENDRO_140*DENDRO_327;
double DENDRO_512 = 1.0*DENDRO_117;
double DENDRO_513 = DENDRO_341 + DENDRO_346;
double DENDRO_514 = DENDRO_140*DENDRO_176;
double DENDRO_515 = 0.25*DENDRO_514;
double DENDRO_516 = DENDRO_113*DENDRO_152;
double DENDRO_517 = DENDRO_194*DENDRO_85;
double DENDRO_518 = 0.25*DENDRO_140;
double DENDRO_519 = DENDRO_113*DENDRO_518 + DENDRO_517;
double DENDRO_520 = DENDRO_152*DENDRO_176 + DENDRO_517;
double DENDRO_521 = -DENDRO_176*DENDRO_330;
double DENDRO_522 = DENDRO_375 + DENDRO_521;
double DENDRO_523 = -DENDRO_113*DENDRO_330;
double DENDRO_524 = 2.0*gt1[pp];
double DENDRO_525 = 2.0*gt2[pp];
double DENDRO_526 = 2.0*gt4[pp];
double DENDRO_527 = -DENDRO_256*DENDRO_290 + DENDRO_291*DENDRO_524 + 2.0*DENDRO_292*gt3[pp] + DENDRO_294*DENDRO_526 + DENDRO_299*grad2_0_2_gt1[pp] + DENDRO_304*grad2_2_2_gt1[pp] + DENDRO_306*grad2_1_1_gt1[pp] + DENDRO_308*grad2_0_0_gt1[pp] - DENDRO_312*grad2_1_2_gt1[pp] - DENDRO_314*grad2_0_1_gt1[pp] + 2.0*DENDRO_370*gt0[pp] + DENDRO_371*DENDRO_524 + DENDRO_372*DENDRO_525;
double DENDRO_528 = DENDRO_118*(DENDRO_493 + DENDRO_522) - DENDRO_158*(DENDRO_301 + DENDRO_519) - DENDRO_158*(DENDRO_301 + DENDRO_520) + DENDRO_164*(DENDRO_510 + DENDRO_523) - DENDRO_271*(DENDRO_109*DENDRO_194 + DENDRO_515) - DENDRO_284*(1.0*DENDRO_309 + DENDRO_516) + DENDRO_527;
double DENDRO_529 = chi[pp]*(DENDRO_21*DENDRO_5 - DENDRO_321*DENDRO_42*DENDRO_46);
double DENDRO_530 = DENDRO_386*DENDRO_392;
double DENDRO_531 = DENDRO_390*DENDRO_44 - DENDRO_459*DENDRO_530;
double DENDRO_532 = -DENDRO_252;
double DENDRO_533 = DENDRO_111*DENDRO_145;
double DENDRO_534 = 0.5*DENDRO_431;
double DENDRO_535 = DENDRO_113*DENDRO_414;
double DENDRO_536 = DENDRO_102*DENDRO_187;
double DENDRO_537 = DENDRO_179*DENDRO_486;
double DENDRO_538 = DENDRO_137*DENDRO_139;
double DENDRO_539 = DENDRO_155*DENDRO_180;
double DENDRO_540 = DENDRO_138 + DENDRO_500;
double DENDRO_541 = DENDRO_145*DENDRO_154;
double DENDRO_542 = DENDRO_132*DENDRO_179;
double DENDRO_543 = 0.5*DENDRO_542;
double DENDRO_544 = DENDRO_123*DENDRO_232;
double DENDRO_545 = -DENDRO_537;
double DENDRO_546 = DENDRO_145*DENDRO_401;
double DENDRO_547 = 0.25*DENDRO_111;
double DENDRO_548 = DENDRO_107*DENDRO_145 + DENDRO_479;
double DENDRO_549 = DENDRO_113*DENDRO_174;
double DENDRO_550 = DENDRO_109*DENDRO_173;
double DENDRO_551 = DENDRO_549 + DENDRO_550;
double DENDRO_552 = -DENDRO_415;
double DENDRO_553 = DENDRO_141*DENDRO_187 + 0.25*DENDRO_437;
double DENDRO_554 = DENDRO_113*DENDRO_328;
double DENDRO_555 = DENDRO_109*DENDRO_152 + DENDRO_411*DENDRO_85;
double DENDRO_556 = DENDRO_111*DENDRO_492 + DENDRO_187*DENDRO_61;
double DENDRO_557 = DENDRO_106*DENDRO_492;
double DENDRO_558 = DENDRO_140*DENDRO_492 + DENDRO_182*DENDRO_85;
double DENDRO_559 = -0.5*DENDRO_110 + DENDRO_195*DENDRO_85;
double DENDRO_560 = DENDRO_111*DENDRO_113;
double DENDRO_561 = 0.25*DENDRO_560;
double DENDRO_562 = 2.0*DENDRO_427;
double DENDRO_563 = 2.0*DENDRO_428;
double DENDRO_564 = 2.0*gt5[pp];
double DENDRO_565 = DENDRO_290*DENDRO_50;
double DENDRO_566 = DENDRO_291*DENDRO_525 + DENDRO_292*DENDRO_526 + DENDRO_294*DENDRO_564 + DENDRO_299*grad2_0_2_gt2[pp] + DENDRO_304*grad2_2_2_gt2[pp] + DENDRO_306*grad2_1_1_gt2[pp] + DENDRO_308*grad2_0_0_gt2[pp] - DENDRO_312*grad2_1_2_gt2[pp] - DENDRO_314*grad2_0_1_gt2[pp] + DENDRO_429*DENDRO_525 + DENDRO_562*gt0[pp] + DENDRO_563*gt1[pp] - DENDRO_565*DENDRO_87;
double DENDRO_567 = DENDRO_117*(DENDRO_514 + DENDRO_551) - DENDRO_158*(DENDRO_557 + DENDRO_558) - DENDRO_158*(-DENDRO_186*DENDRO_85 + DENDRO_556) + DENDRO_164*(DENDRO_115 + DENDRO_559) + DENDRO_164*(DENDRO_520 + DENDRO_561) - DENDRO_271*(DENDRO_552 + DENDRO_553) - DENDRO_275*(DENDRO_522 + DENDRO_554) - DENDRO_284*(0.5*DENDRO_310 + DENDRO_555) + DENDRO_566;
double DENDRO_568 = DENDRO_320*DENDRO_390 - DENDRO_464*DENDRO_530;
double DENDRO_569 = -DENDRO_248;
double DENDRO_570 = 1.0*DENDRO_357;
double DENDRO_571 = DENDRO_218*DENDRO_411;
double DENDRO_572 = 0.5*DENDRO_355 + DENDRO_571;
double DENDRO_573 = DENDRO_123*DENDRO_218;
double DENDRO_574 = DENDRO_179*DENDRO_226;
double DENDRO_575 = 0.5*DENDRO_574;
double DENDRO_576 = DENDRO_186*DENDRO_232;
double DENDRO_577 = DENDRO_187*DENDRO_190;
double DENDRO_578 = DENDRO_176*DENDRO_328 + DENDRO_577;
double DENDRO_579 = DENDRO_180*DENDRO_235;
double DENDRO_580 = -DENDRO_327*DENDRO_343 + DENDRO_579;
double DENDRO_581 = DENDRO_119*DENDRO_218;
double DENDRO_582 = DENDRO_218*DENDRO_71;
double DENDRO_583 = DENDRO_375 + DENDRO_376;
double DENDRO_584 = DENDRO_493 + DENDRO_554;
double DENDRO_585 = DENDRO_119*DENDRO_235;
double DENDRO_586 = -DENDRO_344 + DENDRO_585;
double DENDRO_587 = 0.25*DENDRO_435;
double DENDRO_588 = -DENDRO_535;
double DENDRO_589 = DENDRO_187*DENDRO_98;
double DENDRO_590 = DENDRO_176*DENDRO_547 + DENDRO_589;
double DENDRO_591 = DENDRO_300 + DENDRO_560;
double DENDRO_592 = 1.0*DENDRO_283;
double DENDRO_593 = 1.0*DENDRO_157;
double DENDRO_594 = DENDRO_299*grad2_0_2_gt4[pp] + DENDRO_304*grad2_2_2_gt4[pp] + DENDRO_306*grad2_1_1_gt4[pp] + DENDRO_308*grad2_0_0_gt4[pp] - DENDRO_312*grad2_1_2_gt4[pp] - DENDRO_314*grad2_0_1_gt4[pp] + DENDRO_370*DENDRO_525 + DENDRO_371*DENDRO_526 + DENDRO_372*DENDRO_564 + DENDRO_429*DENDRO_526 + DENDRO_562*gt1[pp] + DENDRO_563*gt3[pp] - DENDRO_565*DENDRO_81;
double DENDRO_595 = -DENDRO_158*(DENDRO_588 + DENDRO_590) - DENDRO_271*(DENDRO_187*DENDRO_194 + DENDRO_430 + DENDRO_587) - DENDRO_592*(DENDRO_114 + DENDRO_591) - DENDRO_593*(DENDRO_432 + DENDRO_551) + DENDRO_594;
double DENDRO_596 = 0.50000000000000011*chi[pp];
double DENDRO_597 = 1.0000000000000002*At2[pp];
double DENDRO_598 = 1.0000000000000002*At4[pp];
double DENDRO_599 = 1.5*DENDRO_448;
double DENDRO_600 = 3*DENDRO_15;
double DENDRO_601 = DENDRO_600*chi[pp];
double DENDRO_602 = (1.0/3.0)*DENDRO_290*(DENDRO_388*DENDRO_446*DENDRO_600 + DENDRO_451*DENDRO_601*x + DENDRO_454*DENDRO_601*y + DENDRO_50*DENDRO_599*z + DENDRO_599*DENDRO_81*y + DENDRO_599*DENDRO_87*x + K[pp]*chi[pp]);
double DENDRO_603 = grad_0_At2[pp];
double DENDRO_604 = 0.5*DENDRO_79;
double DENDRO_605 = At1[pp]*DENDRO_604;
double DENDRO_606 = At0[pp]*DENDRO_604;
double DENDRO_607 = At2[pp]*DENDRO_604;
double DENDRO_608 = DENDRO_109*DENDRO_605 + DENDRO_132*DENDRO_607 + DENDRO_203*DENDRO_606 + DENDRO_603;
double DENDRO_609 = grad_0_At4[pp];
double DENDRO_610 = DENDRO_176*DENDRO_605 + DENDRO_208*DENDRO_606 + DENDRO_226*DENDRO_607 + DENDRO_609;
double DENDRO_611 = grad_0_At5[pp];
double DENDRO_612 = At0[pp]*DENDRO_397 + At1[pp]*DENDRO_396 + At2[pp]*DENDRO_395 + DENDRO_611;
double DENDRO_613 = DENDRO_320*DENDRO_610 - DENDRO_35*DENDRO_612 + DENDRO_44*DENDRO_608;
double DENDRO_614 = 0.50000000000000011*DENDRO_20*z + 0.50000000000000011*DENDRO_35;
double DENDRO_615 = DENDRO_614*x;
double DENDRO_616 = DENDRO_381*DENDRO_615;
double DENDRO_617 = grad_2_At1[pp];
double DENDRO_618 = At4[pp]*DENDRO_604;
double DENDRO_619 = At5[pp]*DENDRO_604;
double DENDRO_620 = DENDRO_113*DENDRO_618 + DENDRO_127*DENDRO_619 + DENDRO_210*DENDRO_607 + DENDRO_617;
double DENDRO_621 = grad_2_At2[pp];
double DENDRO_622 = DENDRO_109*DENDRO_618 + DENDRO_132*DENDRO_619 + DENDRO_203*DENDRO_607 + DENDRO_621;
double DENDRO_623 = grad_2_At0[pp];
double DENDRO_624 = At2[pp]*DENDRO_94 + At4[pp]*DENDRO_86 + At5[pp]*DENDRO_80 + DENDRO_623;
double DENDRO_625 = DENDRO_320*DENDRO_620 - DENDRO_35*DENDRO_622 + DENDRO_44*DENDRO_624;
double DENDRO_626 = grad_1_At2[pp];
double DENDRO_627 = At3[pp]*DENDRO_604;
double DENDRO_628 = DENDRO_109*DENDRO_627 + DENDRO_132*DENDRO_618 + DENDRO_203*DENDRO_605 + DENDRO_626;
double DENDRO_629 = grad_1_At4[pp];
double DENDRO_630 = DENDRO_176*DENDRO_627 + DENDRO_208*DENDRO_605 + DENDRO_226*DENDRO_618 + DENDRO_629;
double DENDRO_631 = grad_1_At5[pp];
double DENDRO_632 = At1[pp]*DENDRO_397 + At3[pp]*DENDRO_396 + At4[pp]*DENDRO_395 + DENDRO_631;
double DENDRO_633 = DENDRO_320*DENDRO_630 - DENDRO_35*DENDRO_632 + DENDRO_44*DENDRO_628;
double DENDRO_634 = DENDRO_614*y;
double DENDRO_635 = DENDRO_381*DENDRO_634;
double DENDRO_636 = grad_2_At4[pp];
double DENDRO_637 = DENDRO_176*DENDRO_618 + DENDRO_208*DENDRO_607 + DENDRO_226*DENDRO_619 + DENDRO_636;
double DENDRO_638 = grad_2_At3[pp];
double DENDRO_639 = At2[pp]*DENDRO_326 + At4[pp]*DENDRO_325 + At5[pp]*DENDRO_324 + DENDRO_638;
double DENDRO_640 = DENDRO_320*DENDRO_639 - DENDRO_35*DENDRO_637 + DENDRO_44*DENDRO_620;
double DENDRO_641 = grad_1_At1[pp];
double DENDRO_642 = DENDRO_113*DENDRO_627 + DENDRO_127*DENDRO_618 + DENDRO_210*DENDRO_605 + DENDRO_641;
double DENDRO_643 = grad_1_At0[pp];
double DENDRO_644 = At1[pp]*DENDRO_94 + At3[pp]*DENDRO_86 + At4[pp]*DENDRO_80 + DENDRO_643;
double DENDRO_645 = DENDRO_459*y;
double DENDRO_646 = -DENDRO_462 - DENDRO_463 + x;
double DENDRO_647 = 0.50000000000000011*DENDRO_645 + 0.50000000000000011*DENDRO_646*x;
double DENDRO_648 = grad_0_At1[pp];
double DENDRO_649 = DENDRO_113*DENDRO_605 + DENDRO_127*DENDRO_607 + DENDRO_210*DENDRO_606 + DENDRO_648;
double DENDRO_650 = grad_0_At3[pp];
double DENDRO_651 = At0[pp]*DENDRO_326 + At1[pp]*DENDRO_325 + At2[pp]*DENDRO_324 + DENDRO_650;
double DENDRO_652 = DENDRO_464*x;
double DENDRO_653 = 0.50000000000000011*DENDRO_645 - 0.50000000000000011*DENDRO_652;
double DENDRO_654 = DENDRO_459*DENDRO_624 + DENDRO_464*DENDRO_620 + DENDRO_467*DENDRO_622;
double DENDRO_655 = DENDRO_459*z;
double DENDRO_656 = DENDRO_95*(-DENDRO_389 + DENDRO_391);
double DENDRO_657 = 0.50000000000000011*DENDRO_655 + 0.50000000000000011*DENDRO_656*x;
double DENDRO_658 = DENDRO_459*DENDRO_608 + DENDRO_464*DENDRO_610 + DENDRO_467*DENDRO_612;
double DENDRO_659 = DENDRO_467*x;
double DENDRO_660 = 0.50000000000000011*DENDRO_655 - 0.50000000000000011*DENDRO_659;
double DENDRO_661 = DENDRO_459*DENDRO_620 + DENDRO_464*DENDRO_639 + DENDRO_467*DENDRO_637;
double DENDRO_662 = DENDRO_467*y;
double DENDRO_663 = -0.50000000000000011*DENDRO_464*z + 0.50000000000000011*DENDRO_662;
double DENDRO_664 = DENDRO_459*DENDRO_628 + DENDRO_464*DENDRO_630 + DENDRO_467*DENDRO_632;
double DENDRO_665 = 0.50000000000000011*DENDRO_646*z - 0.50000000000000011*DENDRO_656*y;
double DENDRO_666 = DENDRO_448*DENDRO_95;
double DENDRO_667 = -DENDRO_51 + DENDRO_52;
double DENDRO_668 = -DENDRO_64 + DENDRO_65;
double DENDRO_669 = DENDRO_55*DENDRO_667 + DENDRO_63 + DENDRO_668*DENDRO_71;
double DENDRO_670 = DENDRO_75 - DENDRO_76;
double DENDRO_671 = DENDRO_62*DENDRO_670 + DENDRO_84;
double DENDRO_672 = DENDRO_74 - DENDRO_88;
double DENDRO_673 = DENDRO_55*DENDRO_672 + DENDRO_667*DENDRO_71 + DENDRO_91;
double DENDRO_674 = DENDRO_132*DENDRO_154;
double DENDRO_675 = DENDRO_203*DENDRO_54;
double DENDRO_676 = 0.25*DENDRO_675;
double DENDRO_677 = DENDRO_69*DENDRO_93;
double DENDRO_678 = DENDRO_127*DENDRO_137;
double DENDRO_679 = DENDRO_152*DENDRO_203;
double DENDRO_680 = DENDRO_146*DENDRO_210;
double DENDRO_681 = DENDRO_127*DENDRO_154;
double DENDRO_682 = DENDRO_210*DENDRO_54;
double DENDRO_683 = 0.25*DENDRO_682;
double DENDRO_684 = DENDRO_60*DENDRO_93;
double DENDRO_685 = DENDRO_111*DENDRO_73;
double DENDRO_686 = DENDRO_201*DENDRO_259;
double DENDRO_687 = DENDRO_201*DENDRO_262;
double DENDRO_688 = DENDRO_201*DENDRO_265;
double DENDRO_689 = DENDRO_107*DENDRO_73;
double DENDRO_690 = DENDRO_268*(-DENDRO_242 - DENDRO_245 - DENDRO_247 + DENDRO_251 - DENDRO_254 + DENDRO_258 - DENDRO_261 - DENDRO_264 - DENDRO_267);
double DENDRO_691 = DENDRO_203*DENDRO_69;
double DENDRO_692 = DENDRO_210*DENDRO_60;
double DENDRO_693 = -DENDRO_116*DENDRO_220*DENDRO_289 + DENDRO_118*(-1.0*DENDRO_110 + DENDRO_115) + DENDRO_118*(-1.0*DENDRO_128 + DENDRO_134) + DENDRO_118*(DENDRO_132*DENDRO_141 + DENDRO_678) + DENDRO_118*(DENDRO_203*DENDRO_61 + DENDRO_680) + DENDRO_118*(DENDRO_210*DENDRO_70 + DENDRO_679) - DENDRO_127*DENDRO_281 - DENDRO_158*(DENDRO_676 + 1.0*DENDRO_677) - DENDRO_158*(-DENDRO_156*DENDRO_73 + DENDRO_674) + DENDRO_164*(DENDRO_683 + 1.0*DENDRO_684) + DENDRO_164*(DENDRO_140*DENDRO_73 + DENDRO_681) - DENDRO_169*(DENDRO_675 + DENDRO_677) - DENDRO_169*(DENDRO_132*DENDRO_69 + DENDRO_689) + DENDRO_171*(DENDRO_682 + DENDRO_684) + DENDRO_171*(DENDRO_127*DENDRO_69 + DENDRO_685) - DENDRO_237*DENDRO_282*DENDRO_317 - DENDRO_272*(DENDRO_121 - DENDRO_137) - DENDRO_276*(DENDRO_100 - DENDRO_273) - DENDRO_286*DENDRO_691 - DENDRO_288*DENDRO_692 + DENDRO_318 + DENDRO_54*DENDRO_688 + DENDRO_60*DENDRO_686 + DENDRO_687*DENDRO_69 + DENDRO_690*gt0[pp] - DENDRO_96*(DENDRO_260*DENDRO_671 + DENDRO_263*DENDRO_669 + DENDRO_266*DENDRO_673 + DENDRO_49);
double DENDRO_694 = DENDRO_100 + DENDRO_364;
double DENDRO_695 = DENDRO_195*DENDRO_668 + DENDRO_234 + DENDRO_667*DENDRO_694;
double DENDRO_696 = DENDRO_190*DENDRO_670 + DENDRO_196 + DENDRO_694*DENDRO_83;
double DENDRO_697 = DENDRO_195*DENDRO_667 + DENDRO_217 + DENDRO_672*DENDRO_694;
double DENDRO_698 = DENDRO_208*DENDRO_62;
double DENDRO_699 = DENDRO_140*DENDRO_210;
double DENDRO_700 = 0.25*DENDRO_699;
double DENDRO_701 = DENDRO_127*DENDRO_343;
double DENDRO_702 = DENDRO_152*DENDRO_208;
double DENDRO_703 = -DENDRO_331;
double DENDRO_704 = DENDRO_226*DENDRO_328;
double DENDRO_705 = DENDRO_173*DENDRO_198;
double DENDRO_706 = DENDRO_127*DENDRO_328;
double DENDRO_707 = -DENDRO_210*DENDRO_330;
double DENDRO_708 = DENDRO_198*DENDRO_97;
double DENDRO_709 = -DENDRO_116*DENDRO_199*DENDRO_369 + DENDRO_118*(-DENDRO_329 + DENDRO_704) + DENDRO_118*(DENDRO_332 + DENDRO_703) + DENDRO_118*(DENDRO_334 + 1.0*DENDRO_705) - DENDRO_127*DENDRO_368 - DENDRO_158*(-1.0*DENDRO_337 + DENDRO_339) - DENDRO_158*(DENDRO_698 + DENDRO_700) - DENDRO_158*(DENDRO_210*DENDRO_345 + DENDRO_702) - DENDRO_158*(DENDRO_226*DENDRO_345 + DENDRO_701) + DENDRO_164*(DENDRO_348 + DENDRO_706) + DENDRO_164*(DENDRO_350 + DENDRO_707) + DENDRO_164*(DENDRO_352 + 1.0*DENDRO_708) + DENDRO_171*(DENDRO_351 + DENDRO_708) + DENDRO_171*(DENDRO_127*DENDRO_173 + DENDRO_358) + DENDRO_171*(DENDRO_210*DENDRO_97 + DENDRO_360) + DENDRO_173*DENDRO_687 + DENDRO_189*DENDRO_686 - DENDRO_208*DENDRO_363 - DENDRO_210*DENDRO_366 + DENDRO_356*(DENDRO_333 + DENDRO_705) + DENDRO_356*(DENDRO_173*DENDRO_226 + DENDRO_357) + DENDRO_356*(DENDRO_208*DENDRO_97 + DENDRO_355) - DENDRO_361*(DENDRO_184 - DENDRO_343) - DENDRO_365*(DENDRO_100 + DENDRO_98) + DENDRO_380 + DENDRO_688*DENDRO_97 + DENDRO_690*gt3[pp] - DENDRO_96*(DENDRO_260*DENDRO_696 + DENDRO_263*DENDRO_695 + DENDRO_266*DENDRO_697 + DENDRO_323);
double DENDRO_710 = DENDRO_184 + DENDRO_421;
double DENDRO_711 = DENDRO_121 + DENDRO_419;
double DENDRO_712 = DENDRO_180*DENDRO_668 + DENDRO_57*DENDRO_710 + DENDRO_667*DENDRO_711;
double DENDRO_713 = DENDRO_181 + DENDRO_670*DENDRO_710 + DENDRO_711*DENDRO_83;
double DENDRO_714 = DENDRO_180*DENDRO_667 + DENDRO_672*DENDRO_711 + DENDRO_710*DENDRO_83;
double DENDRO_715 = -DENDRO_203*DENDRO_401;
double DENDRO_716 = 0.25*DENDRO_542;
double DENDRO_717 = DENDRO_107*DENDRO_232;
double DENDRO_718 = -DENDRO_402;
double DENDRO_719 = 0.25*DENDRO_574;
double DENDRO_720 = DENDRO_174*DENDRO_232;
double DENDRO_721 = DENDRO_208*DENDRO_71;
double DENDRO_722 = DENDRO_140*DENDRO_203;
double DENDRO_723 = 0.25*DENDRO_722;
double DENDRO_724 = DENDRO_137*DENDRO_226;
double DENDRO_725 = DENDRO_146*DENDRO_208;
double DENDRO_726 = DENDRO_140*DENDRO_215;
double DENDRO_727 = DENDRO_215*DENDRO_69;
double DENDRO_728 = DENDRO_174*DENDRO_226;
double DENDRO_729 = DENDRO_107*DENDRO_132;
double DENDRO_730 = DENDRO_107*DENDRO_688 - DENDRO_116*DENDRO_233*DENDRO_426 + DENDRO_118*(DENDRO_403 + DENDRO_718) + DENDRO_118*(DENDRO_719 + 1.0*DENDRO_720) - DENDRO_158*(DENDRO_416 + DENDRO_552) - DENDRO_158*(DENDRO_716 + 1.0*DENDRO_717) - DENDRO_158*(DENDRO_215*DENDRO_406 + DENDRO_715) + DENDRO_164*(DENDRO_721 + DENDRO_723) + DENDRO_164*(DENDRO_119*DENDRO_226 + DENDRO_487) + DENDRO_164*(DENDRO_132*DENDRO_182 + DENDRO_724) + DENDRO_164*(DENDRO_203*DENDRO_411 + DENDRO_725) - DENDRO_169*(DENDRO_542 + DENDRO_717) - DENDRO_169*(DENDRO_107*DENDRO_203 + DENDRO_727) + DENDRO_174*DENDRO_686 + DENDRO_179*DENDRO_687 - DENDRO_203*DENDRO_425 - DENDRO_208*DENDRO_424 - DENDRO_288*DENDRO_728 + DENDRO_356*(DENDRO_574 + DENDRO_720) + DENDRO_356*(DENDRO_107*DENDRO_208 + DENDRO_726) - DENDRO_379*DENDRO_729 - DENDRO_420*(DENDRO_119 + DENDRO_121) - DENDRO_422*(DENDRO_182 + DENDRO_184) + DENDRO_439 + DENDRO_690*gt5[pp] - DENDRO_96*(DENDRO_260*DENDRO_713 + DENDRO_263*DENDRO_712 + DENDRO_266*DENDRO_714 + DENDRO_394);
double DENDRO_731 = DENDRO_35*DENDRO_467;
double DENDRO_732 = 1.0000000000000002*DENDRO_20;
double DENDRO_733 = (-0.50000000000000011*DENDRO_19 + 0.50000000000000011*z)*(DENDRO_645 + DENDRO_652);
double DENDRO_734 = 2*At1[pp];
double DENDRO_735 = -DENDRO_20*DENDRO_659 + DENDRO_35*DENDRO_459;
double DENDRO_736 = -DENDRO_20*DENDRO_662 + DENDRO_35*DENDRO_464;
double DENDRO_737 = DENDRO_132*DENDRO_173;
double DENDRO_738 = DENDRO_140*DENDRO_226;
double DENDRO_739 = DENDRO_127*DENDRO_174;
double DENDRO_740 = DENDRO_738 + DENDRO_739;
double DENDRO_741 = DENDRO_203*DENDRO_97;
double DENDRO_742 = DENDRO_208*DENDRO_60;
double DENDRO_743 = DENDRO_699 + DENDRO_742;
double DENDRO_744 = -DENDRO_488;
double DENDRO_745 = -DENDRO_489;
double DENDRO_746 = DENDRO_744 + DENDRO_745;
double DENDRO_747 = -DENDRO_491;
double DENDRO_748 = DENDRO_127*DENDRO_374 + DENDRO_482;
double DENDRO_749 = DENDRO_210*DENDRO_273;
double DENDRO_750 = DENDRO_62*DENDRO_93;
double DENDRO_751 = DENDRO_127*DENDRO_146 + DENDRO_345*DENDRO_73;
double DENDRO_752 = -DENDRO_497 - DENDRO_498;
double DENDRO_753 = DENDRO_146*DENDRO_226;
double DENDRO_754 = DENDRO_182*DENDRO_73;
double DENDRO_755 = DENDRO_106*DENDRO_132;
double DENDRO_756 = 0.25*DENDRO_755;
double DENDRO_757 = DENDRO_345*DENDRO_93;
double DENDRO_758 = DENDRO_679 + DENDRO_680;
double DENDRO_759 = DENDRO_203*DENDRO_296;
double DENDRO_760 = 0.25*DENDRO_208*DENDRO_54;
double DENDRO_761 = DENDRO_141*DENDRO_93 + DENDRO_760;
double DENDRO_762 = -DENDRO_484 - DENDRO_485;
double DENDRO_763 = -DENDRO_203*DENDRO_330;
double DENDRO_764 = DENDRO_210*DENDRO_496 + DENDRO_495;
double DENDRO_765 = DENDRO_141*DENDRO_198;
double DENDRO_766 = DENDRO_127*DENDRO_496 + DENDRO_508;
double DENDRO_767 = DENDRO_210*DENDRO_296 + DENDRO_507;
double DENDRO_768 = DENDRO_127*DENDRO_547;
double DENDRO_769 = DENDRO_127*DENDRO_518 + DENDRO_194*DENDRO_73;
double DENDRO_770 = DENDRO_208*DENDRO_69;
double DENDRO_771 = DENDRO_106*DENDRO_203;
double DENDRO_772 = 1.0*DENDRO_270;
double DENDRO_773 = DENDRO_111*DENDRO_668 + DENDRO_124 + DENDRO_60*DENDRO_667;
double DENDRO_774 = DENDRO_112 + DENDRO_670*DENDRO_97;
double DENDRO_775 = DENDRO_111*DENDRO_667 + DENDRO_142 + DENDRO_60*DENDRO_672;
double DENDRO_776 = DENDRO_104*DENDRO_687 + DENDRO_58*DENDRO_688 + DENDRO_686*DENDRO_99 + DENDRO_690*gt1[pp] - DENDRO_96*(DENDRO_475 + DENDRO_476*DENDRO_774 + DENDRO_477*DENDRO_773 + DENDRO_478*DENDRO_775);
double DENDRO_777 = DENDRO_117*(DENDRO_737 + DENDRO_740) + DENDRO_117*(DENDRO_741 + DENDRO_743) + DENDRO_118*(DENDRO_483 + DENDRO_762) + DENDRO_118*(DENDRO_494 + DENDRO_765) + DENDRO_118*(DENDRO_763 + DENDRO_764) - DENDRO_158*(DENDRO_134 + DENDRO_752) - DENDRO_158*(DENDRO_757 + DENDRO_758) - DENDRO_158*(DENDRO_759 + DENDRO_761) - DENDRO_158*(DENDRO_753 + DENDRO_754 + DENDRO_756) + DENDRO_164*(DENDRO_768 + DENDRO_769) + DENDRO_164*(-DENDRO_102*DENDRO_93 + DENDRO_767) + DENDRO_164*(DENDRO_195*DENDRO_73 + DENDRO_766) + DENDRO_164*(DENDRO_198*DENDRO_61 + DENDRO_510) + DENDRO_171*(DENDRO_692 + DENDRO_93*DENDRO_97) - DENDRO_271*(DENDRO_487 + DENDRO_746) - DENDRO_275*(DENDRO_490 + DENDRO_747) - DENDRO_275*(DENDRO_706 + DENDRO_748) - DENDRO_275*(DENDRO_481 + DENDRO_707 + DENDRO_749) - DENDRO_284*(0.5*DENDRO_685 + DENDRO_751) - DENDRO_284*(DENDRO_61*DENDRO_93 + DENDRO_683 + DENDRO_750) + DENDRO_528 - DENDRO_772*(DENDRO_722 + DENDRO_770 + DENDRO_771) + DENDRO_776;
double DENDRO_778 = DENDRO_107*DENDRO_210 + DENDRO_770;
double DENDRO_779 = -DENDRO_544;
double DENDRO_780 = DENDRO_137*DENDRO_203;
double DENDRO_781 = 0.25*DENDRO_738;
double DENDRO_782 = DENDRO_132*DENDRO_146;
double DENDRO_783 = DENDRO_71*DENDRO_93;
double DENDRO_784 = DENDRO_215*DENDRO_55;
double DENDRO_785 = DENDRO_154*DENDRO_203 + DENDRO_784;
double DENDRO_786 = DENDRO_180*DENDRO_73;
double DENDRO_787 = DENDRO_132*DENDRO_137 + DENDRO_786;
double DENDRO_788 = -DENDRO_132*DENDRO_401;
double DENDRO_789 = DENDRO_534 - DENDRO_536;
double DENDRO_790 = -DENDRO_210*DENDRO_401;
double DENDRO_791 = DENDRO_215*DENDRO_61;
double DENDRO_792 = DENDRO_203*DENDRO_547 + DENDRO_791;
double DENDRO_793 = DENDRO_141*DENDRO_232;
double DENDRO_794 = 0.25*DENDRO_127*DENDRO_179;
double DENDRO_795 = DENDRO_487 + DENDRO_794;
double DENDRO_796 = DENDRO_132*DENDRO_518;
double DENDRO_797 = DENDRO_678 + DENDRO_754;
double DENDRO_798 = DENDRO_411*DENDRO_93;
double DENDRO_799 = DENDRO_154*DENDRO_210;
double DENDRO_800 = DENDRO_111*DENDRO_210;
double DENDRO_801 = 1.0*DENDRO_274;
double DENDRO_802 = DENDRO_107*DENDRO_668 + DENDRO_131 + DENDRO_667*DENDRO_69;
double DENDRO_803 = DENDRO_106*DENDRO_670 + DENDRO_108;
double DENDRO_804 = DENDRO_107*DENDRO_667 + DENDRO_150 + DENDRO_672*DENDRO_69;
double DENDRO_805 = DENDRO_105*DENDRO_686 + DENDRO_120*DENDRO_687 + DENDRO_67*DENDRO_688 + DENDRO_690*gt2[pp] - DENDRO_96*(DENDRO_476*DENDRO_803 + DENDRO_477*DENDRO_802 + DENDRO_478*DENDRO_804 + DENDRO_532);
double DENDRO_806 = DENDRO_117*(DENDRO_722 + DENDRO_778) + DENDRO_118*(DENDRO_588 + DENDRO_789) + DENDRO_118*(DENDRO_744 + DENDRO_795) + DENDRO_118*(DENDRO_790 + DENDRO_792) + DENDRO_118*(DENDRO_793 + DENDRO_795) - DENDRO_158*(DENDRO_787 + DENDRO_788) - DENDRO_158*(-DENDRO_123*DENDRO_93 + DENDRO_785) - DENDRO_158*(DENDRO_232*DENDRO_70 + DENDRO_787) + DENDRO_164*(DENDRO_753 + DENDRO_797) + DENDRO_164*(DENDRO_758 + DENDRO_798) + DENDRO_164*(DENDRO_761 + DENDRO_799) + DENDRO_164*(DENDRO_796 + DENDRO_797) - DENDRO_169*(DENDRO_107*DENDRO_93 + DENDRO_691) - DENDRO_271*(DENDRO_543 + DENDRO_779) - DENDRO_271*(DENDRO_215*DENDRO_70 + DENDRO_715 + DENDRO_780) - DENDRO_275*(DENDRO_127*DENDRO_182 + DENDRO_781) - DENDRO_284*(1.0*DENDRO_689 + DENDRO_782) - DENDRO_284*(DENDRO_676 + DENDRO_70*DENDRO_93 + DENDRO_783) + DENDRO_567 - DENDRO_801*(DENDRO_743 + DENDRO_800) + DENDRO_805;
double DENDRO_807 = -DENDRO_576;
double DENDRO_808 = DENDRO_137*DENDRO_208 + DENDRO_215*DENDRO_345;
double DENDRO_809 = DENDRO_226*DENDRO_374;
double DENDRO_810 = DENDRO_195*DENDRO_198;
double DENDRO_811 = DENDRO_208*DENDRO_273;
double DENDRO_812 = DENDRO_759 + DENDRO_799;
double DENDRO_813 = DENDRO_215*DENDRO_62 + 0.5*DENDRO_721;
double DENDRO_814 = DENDRO_232*DENDRO_345;
double DENDRO_815 = DENDRO_724 + DENDRO_794;
double DENDRO_816 = DENDRO_208*DENDRO_547 + DENDRO_215*DENDRO_98;
double DENDRO_817 = DENDRO_208*DENDRO_518;
double DENDRO_818 = DENDRO_208*DENDRO_496 + DENDRO_581;
double DENDRO_819 = DENDRO_226*DENDRO_343 + DENDRO_579;
double DENDRO_820 = -DENDRO_226*DENDRO_414;
double DENDRO_821 = DENDRO_582 + 0.5*DENDRO_698;
double DENDRO_822 = DENDRO_226*DENDRO_496;
double DENDRO_823 = DENDRO_585 + DENDRO_701;
double DENDRO_824 = 0.25*DENDRO_800;
double DENDRO_825 = DENDRO_203*DENDRO_273 + DENDRO_495;
double DENDRO_826 = DENDRO_132*DENDRO_374;
double DENDRO_827 = DENDRO_198*DENDRO_411;
double DENDRO_828 = DENDRO_198*DENDRO_345;
double DENDRO_829 = DENDRO_140*DENDRO_667 + DENDRO_174*DENDRO_668 + DENDRO_223;
double DENDRO_830 = DENDRO_173*DENDRO_670 + DENDRO_175;
double DENDRO_831 = DENDRO_140*DENDRO_672 + DENDRO_174*DENDRO_667 + DENDRO_205;
double DENDRO_832 = DENDRO_103*DENDRO_688 + DENDRO_183*DENDRO_687 + DENDRO_192*DENDRO_686 + DENDRO_690*gt4[pp] - DENDRO_96*(DENDRO_476*DENDRO_830 + DENDRO_477*DENDRO_829 + DENDRO_478*DENDRO_831 + DENDRO_569);
double DENDRO_833 = DENDRO_118*(-DENDRO_573 + DENDRO_816) + DENDRO_118*(DENDRO_817 + DENDRO_818) + DENDRO_118*(DENDRO_819 + DENDRO_820) + DENDRO_118*(-DENDRO_186*DENDRO_198 + DENDRO_578) + DENDRO_118*(DENDRO_194*DENDRO_232 + DENDRO_819) - DENDRO_158*(DENDRO_745 + DENDRO_815) - DENDRO_158*(DENDRO_790 + DENDRO_813) - DENDRO_158*(DENDRO_814 + DENDRO_815) + DENDRO_164*(DENDRO_583 + DENDRO_827) + DENDRO_164*(DENDRO_584 + DENDRO_828) + DENDRO_164*(DENDRO_700 + DENDRO_821) + DENDRO_164*(DENDRO_822 + DENDRO_823) + DENDRO_164*(DENDRO_823 + DENDRO_826) + DENDRO_164*(DENDRO_824 + DENDRO_825) - DENDRO_271*(DENDRO_575 + DENDRO_807) - DENDRO_271*(DENDRO_718 + DENDRO_808) - DENDRO_275*(DENDRO_570 + DENDRO_809) - DENDRO_275*(DENDRO_572 + DENDRO_811) - DENDRO_275*(DENDRO_194*DENDRO_198 + DENDRO_334 + DENDRO_810) - DENDRO_284*(DENDRO_680 + DENDRO_812) - DENDRO_284*(DENDRO_119*DENDRO_127 + DENDRO_756) + DENDRO_356*(DENDRO_174*DENDRO_198 + DENDRO_377) - DENDRO_593*(DENDRO_771 + DENDRO_778) + DENDRO_595 + DENDRO_832;
double DENDRO_834 = pow(DENDRO_83, 2);
double DENDRO_835 = pow(DENDRO_53, 2);
double DENDRO_836 = At4[pp]*DENDRO_53;
double DENDRO_837 = At1[pp]*DENDRO_89;
double DENDRO_838 = At2[pp]*DENDRO_89;
double DENDRO_839 = pow(DENDRO_57, 2);
double DENDRO_840 = At2[pp]*DENDRO_57;
double DENDRO_841 = At1[pp]*DENDRO_82;
double DENDRO_842 = At4[pp]*DENDRO_82;
double DENDRO_843 = At1[pp]*DENDRO_53;
double DENDRO_844 = At2[pp]*DENDRO_66;
double DENDRO_845 = At4[pp]*DENDRO_66;
double DENDRO_846 = DENDRO_57*DENDRO_83;
double DENDRO_847 = At0[pp]*DENDRO_89;
double DENDRO_848 = DENDRO_53*DENDRO_83;
double DENDRO_849 = At5[pp]*DENDRO_53;
double DENDRO_850 = 2*DENDRO_116;
double DENDRO_851 = At3[pp]*DENDRO_82;
double DENDRO_852 = At5[pp]*DENDRO_57;
double DENDRO_853 = (1.0/4.0)*chi[pp];
double DENDRO_854 = DENDRO_226*DENDRO_69;
double DENDRO_855 = DENDRO_107*DENDRO_127;
double DENDRO_856 = DENDRO_133 + DENDRO_855;
double DENDRO_857 = DENDRO_176*DENDRO_60;
double DENDRO_858 = DENDRO_146*DENDRO_203;
double DENDRO_859 = 0.25*DENDRO_549 + DENDRO_589;
double DENDRO_860 = DENDRO_487 + DENDRO_724;
double DENDRO_861 = DENDRO_232*DENDRO_411 + DENDRO_794;
double DENDRO_862 = DENDRO_137*DENDRO_210 + DENDRO_791;
double DENDRO_863 = DENDRO_176*DENDRO_296;
double DENDRO_864 = DENDRO_154*DENDRO_226;
double DENDRO_865 = DENDRO_679 + DENDRO_760;
double DENDRO_866 = DENDRO_298*DENDRO_853;
double DENDRO_867 = 0.25*DENDRO_771;
double DENDRO_868 = DENDRO_176*DENDRO_374;
double DENDRO_869 = DENDRO_311*DENDRO_853;
double DENDRO_870 = DENDRO_313*DENDRO_853;
double DENDRO_871 = DENDRO_680 + DENDRO_760;
double DENDRO_872 = DENDRO_152*DENDRO_210;
double DENDRO_873 = (3.0/2.0)*DENDRO_95;
double DENDRO_874 = DENDRO_263*DENDRO_873;
double DENDRO_875 = DENDRO_53*DENDRO_874;
double DENDRO_876 = DENDRO_83*DENDRO_873;
double DENDRO_877 = DENDRO_260*DENDRO_876;
double DENDRO_878 = DENDRO_57*DENDRO_874;
double DENDRO_879 = DENDRO_266*DENDRO_876;
double DENDRO_880 = DENDRO_260*DENDRO_873;
double DENDRO_881 = DENDRO_266*DENDRO_873;
double DENDRO_882 = DENDRO_605*DENDRO_803 + DENDRO_606*DENDRO_804 + DENDRO_607*DENDRO_802;
double DENDRO_883 = -DENDRO_621;
double DENDRO_884 = DENDRO_607*DENDRO_804 + DENDRO_618*DENDRO_803 + DENDRO_619*DENDRO_802;
double DENDRO_885 = -DENDRO_617;
double DENDRO_886 = DENDRO_605*DENDRO_804 + DENDRO_618*DENDRO_802 + DENDRO_627*DENDRO_803;
double DENDRO_887 = -DENDRO_626;
double DENDRO_888 = DENDRO_607*DENDRO_775 + DENDRO_618*DENDRO_774 + DENDRO_619*DENDRO_773;
double DENDRO_889 = -DENDRO_641;
double DENDRO_890 = DENDRO_605*DENDRO_775 + DENDRO_618*DENDRO_773 + DENDRO_627*DENDRO_774;
double DENDRO_891 = DENDRO_605*DENDRO_774 + DENDRO_606*DENDRO_775 + DENDRO_607*DENDRO_773;
double DENDRO_892 = -DENDRO_603;
double DENDRO_893 = DENDRO_673*DENDRO_79;
double DENDRO_894 = DENDRO_671*DENDRO_79;
double DENDRO_895 = DENDRO_669*DENDRO_79;
double DENDRO_896 = -DENDRO_648;
double DENDRO_897 = DENDRO_605*DENDRO_830 + DENDRO_606*DENDRO_831 + DENDRO_607*DENDRO_829;
double DENDRO_898 = -DENDRO_609;
double DENDRO_899 = -DENDRO_636;
double DENDRO_900 = DENDRO_607*DENDRO_831 + DENDRO_618*DENDRO_830 + DENDRO_619*DENDRO_829;
double DENDRO_901 = DENDRO_605*DENDRO_831 + DENDRO_618*DENDRO_829 + DENDRO_627*DENDRO_830;
double DENDRO_902 = -DENDRO_629;
double DENDRO_903 = DENDRO_697*DENDRO_79;
double DENDRO_904 = DENDRO_696*DENDRO_79;
double DENDRO_905 = DENDRO_695*DENDRO_79;
double DENDRO_906 = DENDRO_714*DENDRO_79;
double DENDRO_907 = DENDRO_713*DENDRO_79;
double DENDRO_908 = DENDRO_712*DENDRO_79;

// Dendro: printing variables
//--
psi4_real[pp] = DENDRO_319*DENDRO_322*(-DENDRO_118*(DENDRO_331 - 1.0*DENDRO_332) + DENDRO_118*(DENDRO_334 - 1.0*DENDRO_336) - DENDRO_118*(DENDRO_327*DENDRO_328 + DENDRO_329) + DENDRO_136*DENDRO_368 + DENDRO_145*DENDRO_366 + DENDRO_158*(DENDRO_337 - DENDRO_339) + DENDRO_158*(DENDRO_145*DENDRO_345 + 0.25*DENDRO_346) + DENDRO_158*(DENDRO_327*DENDRO_345 + DENDRO_344) + DENDRO_158*(1.0*DENDRO_340*DENDRO_62 + DENDRO_342) + DENDRO_164*(DENDRO_347 + DENDRO_348) + DENDRO_164*(DENDRO_349 + DENDRO_350) + DENDRO_164*(DENDRO_352 - 1.0*DENDRO_353) + DENDRO_171*(DENDRO_351 - DENDRO_353) + DENDRO_171*(-DENDRO_359 + DENDRO_360) + DENDRO_171*(-DENDRO_136*DENDRO_173 + DENDRO_358) - DENDRO_173*DENDRO_238 - DENDRO_189*DENDRO_202 - DENDRO_221*DENDRO_97 - DENDRO_269*gt3[pp] + DENDRO_274*DENDRO_335*DENDRO_369 + DENDRO_340*DENDRO_363 + DENDRO_356*(DENDRO_333 - DENDRO_336) + DENDRO_356*(-DENDRO_354 + DENDRO_355) + DENDRO_356*(-DENDRO_173*DENDRO_327 + DENDRO_357) + DENDRO_361*(DENDRO_185 + DENDRO_343) + DENDRO_365*(DENDRO_101 + DENDRO_364) + DENDRO_380 - DENDRO_96*(DENDRO_323 + DENDRO_324*DENDRO_50 + DENDRO_325*DENDRO_81 + DENDRO_326*DENDRO_87)) + DENDRO_319*DENDRO_47*(-DENDRO_118*(DENDRO_110 - DENDRO_115) - DENDRO_118*(DENDRO_128 + DENDRO_135) - DENDRO_118*(DENDRO_138 + DENDRO_139*DENDRO_141) - DENDRO_118*(DENDRO_147 + DENDRO_151*DENDRO_61) - DENDRO_118*(DENDRO_145*DENDRO_70 + DENDRO_153) + DENDRO_136*DENDRO_281 + DENDRO_155*DENDRO_282*DENDRO_284 + DENDRO_158*(DENDRO_166 + 1.0*DENDRO_167) - DENDRO_158*(-DENDRO_139*DENDRO_154 + DENDRO_155*DENDRO_156) + DENDRO_161*DENDRO_283*DENDRO_289 - DENDRO_164*(DENDRO_160 + 1.0*DENDRO_162) - DENDRO_164*(DENDRO_136*DENDRO_154 + 1.0*DENDRO_140*DENDRO_155) + DENDRO_169*(DENDRO_165 + DENDRO_167) + DENDRO_169*(DENDRO_139*DENDRO_69 + DENDRO_168) - DENDRO_171*(DENDRO_159 + DENDRO_162) - DENDRO_171*(DENDRO_136*DENDRO_69 + DENDRO_170) - DENDRO_202*DENDRO_60 - DENDRO_221*DENDRO_54 - DENDRO_238*DENDRO_69 - DENDRO_269*gt0[pp] + DENDRO_272*(DENDRO_122 + DENDRO_137) + DENDRO_276*(DENDRO_101 + DENDRO_273) + DENDRO_285*DENDRO_286 + DENDRO_287*DENDRO_288 + DENDRO_318 - DENDRO_96*(DENDRO_49 + DENDRO_50*DENDRO_80 + DENDRO_81*DENDRO_86 + DENDRO_87*DENDRO_94)) + 0.12500000000000003*DENDRO_393*(DENDRO_107*DENDRO_139*DENDRO_379 - DENDRO_107*DENDRO_221 - DENDRO_118*(0.25*DENDRO_398 + 1.0*DENDRO_400) - DENDRO_118*(DENDRO_402 - 1.0*DENDRO_403) + DENDRO_151*DENDRO_425 - DENDRO_158*(DENDRO_404 - DENDRO_405*DENDRO_406) + DENDRO_158*(0.25*DENDRO_412 + 1.0*DENDRO_413) + DENDRO_158*(DENDRO_415 - 1.0*DENDRO_416) - DENDRO_164*(1.0*DENDRO_407 + 0.25*DENDRO_408) - DENDRO_164*(DENDRO_119*DENDRO_327 + DENDRO_409) - DENDRO_164*(DENDRO_139*DENDRO_182 + DENDRO_410) - DENDRO_164*(DENDRO_146*DENDRO_340 + DENDRO_151*DENDRO_411) + DENDRO_169*(DENDRO_412 + DENDRO_413) + DENDRO_169*(DENDRO_405*DENDRO_69 + DENDRO_417) - DENDRO_174*DENDRO_202 + DENDRO_174*DENDRO_288*DENDRO_327 - DENDRO_179*DENDRO_238 - DENDRO_269*gt5[pp] + DENDRO_270*DENDRO_399*DENDRO_426 + DENDRO_340*DENDRO_424 - DENDRO_356*(DENDRO_398 + DENDRO_400) - DENDRO_356*(DENDRO_140*DENDRO_405 + DENDRO_418) + DENDRO_420*(DENDRO_122 + DENDRO_419) + DENDRO_422*(DENDRO_185 + DENDRO_421) + DENDRO_439 - DENDRO_96*(DENDRO_394 + DENDRO_395*DENDRO_50 + DENDRO_396*DENDRO_81 + DENDRO_397*DENDRO_87)) - DENDRO_474*(DENDRO_381*DENDRO_457*(-DENDRO_441 + DENDRO_443 + DENDRO_445 + DENDRO_456) - DENDRO_471*DENDRO_473*(DENDRO_461 + DENDRO_466 + DENDRO_469 + DENDRO_470)) + 0.25000000000000006*DENDRO_529*(-DENDRO_104*DENDRO_238 + DENDRO_118*(-DENDRO_141*DENDRO_335 + DENDRO_494) - DENDRO_118*(-DENDRO_483 + DENDRO_484 + DENDRO_485) + DENDRO_118*(-DENDRO_145*DENDRO_496 + DENDRO_151*DENDRO_330 + DENDRO_495) + DENDRO_158*(DENDRO_503 + DENDRO_505) + DENDRO_158*(DENDRO_161*DENDRO_345 + DENDRO_506) + DENDRO_158*(DENDRO_135 + DENDRO_497 + DENDRO_498) + DENDRO_158*(DENDRO_499 + DENDRO_500 + DENDRO_502) + DENDRO_164*(-DENDRO_335*DENDRO_61 + DENDRO_510) + DENDRO_164*(DENDRO_102*DENDRO_161 - DENDRO_145*DENDRO_296 + DENDRO_507) + DENDRO_164*(-DENDRO_106*DENDRO_486 - DENDRO_155*DENDRO_195 + DENDRO_508) - DENDRO_164*(DENDRO_111*DENDRO_486 + DENDRO_140*DENDRO_486 + DENDRO_155*DENDRO_194) - DENDRO_171*(DENDRO_161*DENDRO_97 + DENDRO_287) - DENDRO_202*DENDRO_99 - DENDRO_221*DENDRO_58 - DENDRO_269*gt1[pp] + DENDRO_270*(DENDRO_408 + DENDRO_479 + DENDRO_480) + DENDRO_271*(-DENDRO_487 + DENDRO_488 + DENDRO_489) + DENDRO_275*(-DENDRO_490 + DENDRO_491) - DENDRO_275*(DENDRO_349 - 0.25*DENDRO_359 + DENDRO_481) - DENDRO_275*(-DENDRO_136*DENDRO_374 + DENDRO_347 + DENDRO_482) + DENDRO_284*(DENDRO_160 + DENDRO_161*DENDRO_61 + DENDRO_161*DENDRO_62) + DENDRO_284*(DENDRO_136*DENDRO_146 + DENDRO_155*DENDRO_345 + 0.5*DENDRO_170) - DENDRO_512*(DENDRO_151*DENDRO_97 + DENDRO_513) - DENDRO_512*(DENDRO_136*DENDRO_174 + DENDRO_139*DENDRO_173 + DENDRO_511) + DENDRO_528 - DENDRO_96*(DENDRO_113*DENDRO_476 + DENDRO_127*DENDRO_477 + DENDRO_210*DENDRO_478 + DENDRO_475)) - 0.25000000000000006*DENDRO_531*(-DENDRO_105*DENDRO_202 - DENDRO_118*(-DENDRO_534 + DENDRO_535 + DENDRO_536) - DENDRO_118*(DENDRO_141*DENDRO_399 + DENDRO_409 + DENDRO_537) + DENDRO_118*(-DENDRO_151*DENDRO_547 - DENDRO_405*DENDRO_61 + DENDRO_546) + DENDRO_118*(DENDRO_327*DENDRO_401 - DENDRO_409 + DENDRO_545) - DENDRO_120*DENDRO_238 - DENDRO_158*(DENDRO_123*DENDRO_161 - DENDRO_151*DENDRO_154 - DENDRO_405*DENDRO_55) - DENDRO_158*(DENDRO_139*DENDRO_401 - DENDRO_538 - DENDRO_539) + DENDRO_158*(DENDRO_399*DENDRO_70 + DENDRO_538 + DENDRO_539) - DENDRO_164*(DENDRO_499 + DENDRO_540) - DENDRO_164*(DENDRO_505 + DENDRO_541) - DENDRO_164*(DENDRO_140*DENDRO_501 + DENDRO_540) - DENDRO_164*(DENDRO_161*DENDRO_411 + DENDRO_506) + DENDRO_169*(DENDRO_107*DENDRO_161 + DENDRO_285) - DENDRO_221*DENDRO_67 - DENDRO_269*gt2[pp] + DENDRO_271*(-DENDRO_543 + DENDRO_544) - DENDRO_271*(DENDRO_404 - DENDRO_405*DENDRO_70 - 0.25*DENDRO_417) + DENDRO_274*(DENDRO_513 + DENDRO_533) + DENDRO_275*(DENDRO_136*DENDRO_182 + 0.25*DENDRO_511) + DENDRO_284*(DENDRO_139*DENDRO_146 + 1.0*DENDRO_168) + DENDRO_284*(DENDRO_161*DENDRO_70 + DENDRO_161*DENDRO_71 + DENDRO_166) - DENDRO_512*(DENDRO_408 + DENDRO_548) + DENDRO_567 - DENDRO_96*(DENDRO_109*DENDRO_476 + DENDRO_132*DENDRO_477 + DENDRO_203*DENDRO_478 + DENDRO_532)) - 0.25000000000000006*DENDRO_568*(-DENDRO_103*DENDRO_221 + DENDRO_118*(DENDRO_186*DENDRO_335 + DENDRO_578) + DENDRO_118*(-DENDRO_194*DENDRO_399 + DENDRO_580) + DENDRO_118*(DENDRO_327*DENDRO_414 + DENDRO_580) + DENDRO_118*(-DENDRO_106*DENDRO_504 - DENDRO_140*DENDRO_504 + DENDRO_581) - DENDRO_118*(DENDRO_111*DENDRO_504 + DENDRO_405*DENDRO_98 + DENDRO_573) + DENDRO_157*(DENDRO_480 + DENDRO_548) - DENDRO_158*(DENDRO_139*DENDRO_414 - DENDRO_410 + DENDRO_545) + DENDRO_158*(DENDRO_345*DENDRO_399 + DENDRO_410 + DENDRO_537) - DENDRO_158*(-DENDRO_405*DENDRO_62 - 0.5*DENDRO_407 + DENDRO_546) + DENDRO_164*(-DENDRO_139*DENDRO_374 + DENDRO_586) + DENDRO_164*(-DENDRO_327*DENDRO_496 + DENDRO_586) + DENDRO_164*(-DENDRO_335*DENDRO_345 + DENDRO_584) + DENDRO_164*(-DENDRO_335*DENDRO_411 + DENDRO_583) + DENDRO_164*(-DENDRO_151*DENDRO_273 + DENDRO_495 - 0.25*DENDRO_533) + DENDRO_164*(-DENDRO_296*DENDRO_340 - DENDRO_342 + DENDRO_582) - DENDRO_183*DENDRO_238 - DENDRO_192*DENDRO_202 - DENDRO_269*gt4[pp] + DENDRO_271*(-DENDRO_575 + DENDRO_576) - DENDRO_271*(DENDRO_340*DENDRO_401 - DENDRO_345*DENDRO_405 - 0.25*DENDRO_418) - DENDRO_275*(-0.25*DENDRO_354 + DENDRO_572) - DENDRO_275*(-DENDRO_327*DENDRO_374 + DENDRO_570) - DENDRO_275*(-DENDRO_194*DENDRO_335 - DENDRO_195*DENDRO_335 + DENDRO_334) + DENDRO_284*(DENDRO_119*DENDRO_136 + DENDRO_502) + DENDRO_284*(DENDRO_147 + DENDRO_503 + DENDRO_541) + DENDRO_356*(-DENDRO_174*DENDRO_335 + DENDRO_377) + DENDRO_595 - DENDRO_96*(DENDRO_176*DENDRO_476 + DENDRO_208*DENDRO_478 + DENDRO_226*DENDRO_477 + DENDRO_569)) + DENDRO_602*(At0[pp]*DENDRO_47*DENDRO_596 + 1.0000000000000002*At1[pp]*DENDRO_529 + At3[pp]*DENDRO_322*DENDRO_596 + 0.50000000000000011*At5[pp]*DENDRO_393 - DENDRO_531*DENDRO_597 - DENDRO_568*DENDRO_598) + DENDRO_666*(DENDRO_473*DENDRO_647*(DENDRO_459*DENDRO_644 + DENDRO_464*DENDRO_642 + DENDRO_467*DENDRO_628) - DENDRO_473*DENDRO_653*(DENDRO_459*DENDRO_649 + DENDRO_464*DENDRO_651 + DENDRO_467*DENDRO_610) + DENDRO_473*DENDRO_654*DENDRO_657 - DENDRO_473*DENDRO_658*DENDRO_660 - DENDRO_473*DENDRO_661*DENDRO_663 + DENDRO_473*DENDRO_664*DENDRO_665 + DENDRO_613*DENDRO_616 - DENDRO_616*DENDRO_625 + DENDRO_633*DENDRO_635 - DENDRO_635*DENDRO_640);
//--
psi4_img[pp] = (0.25000000000000006*DENDRO_320*DENDRO_464*DENDRO_709 + 0.25000000000000006*DENDRO_44*DENDRO_459*DENDRO_693 + DENDRO_474*(DENDRO_457*(-DENDRO_461 - DENDRO_466 - DENDRO_469 + DENDRO_470) - DENDRO_471*(DENDRO_441 - DENDRO_443 - DENDRO_445 + DENDRO_456)) - DENDRO_602*(1.0000000000000002*At5[pp]*DENDRO_731 - DENDRO_450*DENDRO_459*DENDRO_732 - DENDRO_453*DENDRO_464*DENDRO_732 + DENDRO_597*DENDRO_735 + DENDRO_598*DENDRO_736 - DENDRO_733*DENDRO_734) + DENDRO_666*(DENDRO_613*DENDRO_660 - DENDRO_615*DENDRO_654 + DENDRO_615*DENDRO_658 - DENDRO_625*DENDRO_657 - DENDRO_633*DENDRO_665 - DENDRO_634*DENDRO_661 + DENDRO_634*DENDRO_664 + DENDRO_640*DENDRO_663 - DENDRO_647*(DENDRO_320*DENDRO_642 - DENDRO_35*DENDRO_628 + DENDRO_44*DENDRO_644) + DENDRO_653*(DENDRO_320*DENDRO_651 - DENDRO_35*DENDRO_610 + DENDRO_44*DENDRO_649)) - 0.25000000000000006*DENDRO_730*DENDRO_731 + (1.0/2.0)*DENDRO_733*DENDRO_777 - 0.25000000000000006*DENDRO_735*DENDRO_806 - 0.25000000000000006*DENDRO_736*DENDRO_833)/(sqrt(DENDRO_17*DENDRO_95)*sqrt(DENDRO_472*DENDRO_95));
//--
ham[pp] = -At0[pp]*DENDRO_116*(At0[pp]*pow(DENDRO_89, 2) + At3[pp]*DENDRO_834 + At5[pp]*DENDRO_835 + DENDRO_253*DENDRO_838 - DENDRO_257*DENDRO_836 - DENDRO_257*DENDRO_837) - At2[pp]*DENDRO_850*(-At1[pp]*DENDRO_848 + At2[pp]*DENDRO_835 + At3[pp]*DENDRO_846 + DENDRO_53*DENDRO_847 - DENDRO_57*DENDRO_836 - DENDRO_57*DENDRO_837 + DENDRO_66*DENDRO_838 + DENDRO_66*DENDRO_849 - DENDRO_83*DENDRO_845) - At3[pp]*DENDRO_116*(At0[pp]*DENDRO_834 + At3[pp]*pow(DENDRO_82, 2) + At5[pp]*DENDRO_839 - DENDRO_250*DENDRO_842 + DENDRO_257*DENDRO_840 - DENDRO_257*DENDRO_841) - At4[pp]*DENDRO_850*(-At0[pp]*DENDRO_848 + At1[pp]*DENDRO_846 + At4[pp]*DENDRO_839 - DENDRO_53*DENDRO_840 + DENDRO_53*DENDRO_841 - DENDRO_57*DENDRO_851 - DENDRO_66*DENDRO_852 + DENDRO_82*DENDRO_845 - DENDRO_83*DENDRO_844) - At5[pp]*DENDRO_116*(At0[pp]*DENDRO_835 + At3[pp]*DENDRO_839 + At5[pp]*pow(DENDRO_66, 2) - DENDRO_250*DENDRO_843 - DENDRO_250*DENDRO_845 + DENDRO_253*DENDRO_844) - DENDRO_116*DENDRO_734*(At1[pp]*DENDRO_834 - At2[pp]*DENDRO_848 + At4[pp]*DENDRO_846 - DENDRO_57*DENDRO_838 - DENDRO_57*DENDRO_849 + DENDRO_82*DENDRO_836 + DENDRO_82*DENDRO_837 - DENDRO_83*DENDRO_847 - DENDRO_83*DENDRO_851) - DENDRO_303*DENDRO_730*DENDRO_853 - DENDRO_305*DENDRO_709*DENDRO_853 - DENDRO_307*DENDRO_693*DENDRO_853 + DENDRO_777*DENDRO_870 - DENDRO_806*DENDRO_866 + DENDRO_833*DENDRO_869 - DENDRO_866*(DENDRO_118*(DENDRO_433 + DENDRO_789) + DENDRO_118*(DENDRO_515 + DENDRO_859) + DENDRO_118*(DENDRO_725 + DENDRO_792) + DENDRO_118*(DENDRO_725 + DENDRO_862) + DENDRO_118*(DENDRO_744 + DENDRO_861) + DENDRO_118*(DENDRO_793 + DENDRO_860) - DENDRO_158*(DENDRO_556 + DENDRO_557) - DENDRO_158*(DENDRO_785 + DENDRO_858) - DENDRO_158*(DENDRO_187*DENDRO_62 + DENDRO_558) - DENDRO_158*(DENDRO_119*DENDRO_93 + DENDRO_784 + DENDRO_858) - DENDRO_158*(DENDRO_232*DENDRO_71 + DENDRO_786 + DENDRO_788) + DENDRO_163*(DENDRO_591 + DENDRO_857) + DENDRO_163*(DENDRO_854 + DENDRO_856) + DENDRO_164*(DENDRO_559 + DENDRO_863) + DENDRO_164*(DENDRO_798 + DENDRO_865) + DENDRO_164*(DENDRO_799 + DENDRO_865) + DENDRO_164*(DENDRO_754 + DENDRO_796 + DENDRO_864) - DENDRO_169*(DENDRO_232*DENDRO_69 + DENDRO_729) - DENDRO_271*(0.5*DENDRO_438 + DENDRO_553) - DENDRO_271*(1.0*DENDRO_727 + DENDRO_780) - DENDRO_271*(DENDRO_119*DENDRO_232 + DENDRO_716 + DENDRO_779) - DENDRO_275*(DENDRO_208*DENDRO_61 + DENDRO_824) - DENDRO_275*(DENDRO_376 + DENDRO_521 + DENDRO_554) - DENDRO_284*(DENDRO_297 + DENDRO_555) - DENDRO_284*(0.5*DENDRO_675 + DENDRO_783) - DENDRO_284*(DENDRO_119*DENDRO_73 + DENDRO_674 + DENDRO_782) + DENDRO_566 - DENDRO_801*(DENDRO_338 + DENDRO_740) + DENDRO_805) + DENDRO_869*(DENDRO_118*(DENDRO_578 + DENDRO_868) + DENDRO_118*(DENDRO_816 + DENDRO_817) + DENDRO_118*(-DENDRO_102*DENDRO_215 + DENDRO_818) + DENDRO_118*(DENDRO_182*DENDRO_198 + DENDRO_577 + DENDRO_868) + DENDRO_118*(DENDRO_195*DENDRO_232 + DENDRO_579 + DENDRO_820) - DENDRO_158*(DENDRO_434 + DENDRO_590) - DENDRO_158*(DENDRO_434 + DENDRO_859) - DENDRO_158*(DENDRO_723 + DENDRO_813) - DENDRO_158*(DENDRO_745 + DENDRO_861) - DENDRO_158*(DENDRO_814 + DENDRO_860) - DENDRO_158*(DENDRO_862 + DENDRO_867) + DENDRO_163*(DENDRO_338 + DENDRO_737 + DENDRO_739) + DENDRO_163*(DENDRO_741 + DENDRO_742 + DENDRO_800) + DENDRO_164*(DENDRO_376 + DENDRO_584) + DENDRO_164*(DENDRO_763 + DENDRO_821) + DENDRO_164*(DENDRO_376 + DENDRO_493 + DENDRO_827) + DENDRO_164*(DENDRO_483 + DENDRO_585 + DENDRO_822) - DENDRO_271*(1.0*DENDRO_436 + DENDRO_587) - DENDRO_271*(0.5*DENDRO_726 + DENDRO_808) - DENDRO_271*(DENDRO_182*DENDRO_232 + DENDRO_719 + DENDRO_807) - DENDRO_275*(0.5*DENDRO_333 + DENDRO_810) - DENDRO_275*(DENDRO_571 + DENDRO_703 + DENDRO_811) - DENDRO_275*(DENDRO_182*DENDRO_235 + DENDRO_704 + DENDRO_809) - DENDRO_284*(DENDRO_679 + DENDRO_812) - DENDRO_284*(DENDRO_109*DENDRO_98 + DENDRO_561) + DENDRO_356*(DENDRO_173*DENDRO_232 + DENDRO_728) - DENDRO_592*(DENDRO_755 + DENDRO_856) + DENDRO_594 + DENDRO_832) + DENDRO_870*(DENDRO_118*(DENDRO_339 + DENDRO_762) + DENDRO_118*(DENDRO_583 + DENDRO_765) + DENDRO_118*(DENDRO_702 + DENDRO_764) + DENDRO_118*(DENDRO_702 + DENDRO_825) + DENDRO_118*(DENDRO_493 + DENDRO_521 + DENDRO_828) + DENDRO_118*(DENDRO_585 + DENDRO_781 + DENDRO_826) - DENDRO_158*(DENDRO_519 + DENDRO_863) - DENDRO_158*(DENDRO_752 + DENDRO_864) - DENDRO_158*(DENDRO_757 + DENDRO_871) - DENDRO_158*(DENDRO_759 + DENDRO_871) + DENDRO_164*(DENDRO_766 + DENDRO_768) + DENDRO_164*(DENDRO_767 + DENDRO_872) + DENDRO_164*(DENDRO_235*DENDRO_71 + DENDRO_769) + DENDRO_164*(DENDRO_507 + DENDRO_872 + DENDRO_93*DENDRO_98) + DENDRO_164*(DENDRO_198*DENDRO_62 + DENDRO_509 + DENDRO_523) + DENDRO_171*(DENDRO_198*DENDRO_60 + DENDRO_378) - DENDRO_271*(DENDRO_724 + DENDRO_746) - DENDRO_271*(DENDRO_208*DENDRO_70 + DENDRO_867) - DENDRO_275*(0.5*DENDRO_358 + DENDRO_748) - DENDRO_275*(1.0*DENDRO_360 + DENDRO_749) - DENDRO_275*(DENDRO_198*DENDRO_98 + DENDRO_352 + DENDRO_747) - DENDRO_284*(DENDRO_681 + DENDRO_751) - DENDRO_284*(0.5*DENDRO_682 + DENDRO_750) - DENDRO_284*(DENDRO_302 + DENDRO_516 + DENDRO_85*DENDRO_98) + DENDRO_527 - DENDRO_593*(DENDRO_114 + DENDRO_300 + DENDRO_857) - DENDRO_593*(DENDRO_755 + DENDRO_854 + DENDRO_855) - DENDRO_772*(DENDRO_432 + DENDRO_514 + DENDRO_550) + DENDRO_776) + (2.0/3.0)*pow(K[pp], 2);
//--
mom0[pp] = At0[pp]*DENDRO_875 - At0[pp]*DENDRO_877 - At0[pp]*Gt0[pp] - At1[pp]*DENDRO_878 - At1[pp]*DENDRO_879 - At1[pp]*Gt1[pp] + At2[pp]*DENDRO_53*DENDRO_881 - At2[pp]*Gt2[pp] + DENDRO_298*(-DENDRO_623 + DENDRO_882) + DENDRO_298*(At2[pp]*DENDRO_893 + At4[pp]*DENDRO_894 + At5[pp]*DENDRO_895 + DENDRO_892) + DENDRO_303*(DENDRO_883 + DENDRO_884) + DENDRO_305*(DENDRO_889 + DENDRO_890) + DENDRO_307*(At0[pp]*DENDRO_893 + At1[pp]*DENDRO_894 + At2[pp]*DENDRO_895 - grad_0_At0[pp]) - DENDRO_311*(DENDRO_885 + DENDRO_886) - DENDRO_311*(DENDRO_887 + DENDRO_888) - DENDRO_313*(-DENDRO_643 + DENDRO_891) - DENDRO_313*(At1[pp]*DENDRO_893 + At3[pp]*DENDRO_894 + At4[pp]*DENDRO_895 + DENDRO_896) - DENDRO_840*DENDRO_880 + DENDRO_841*DENDRO_880 + DENDRO_844*DENDRO_874 + DENDRO_847*DENDRO_881 - 2.0/3.0*grad_0_K[pp];
//--
mom1[pp] = -At1[pp]*DENDRO_877 - At1[pp]*Gt0[pp] - At3[pp]*DENDRO_878 - At3[pp]*DENDRO_879 - At3[pp]*Gt1[pp] - At4[pp]*DENDRO_57*DENDRO_880 - At4[pp]*Gt2[pp] + DENDRO_298*(DENDRO_885 + DENDRO_897) + DENDRO_298*(DENDRO_888 + DENDRO_898) + DENDRO_303*(DENDRO_899 + DENDRO_900) + DENDRO_305*(At1[pp]*DENDRO_903 + At3[pp]*DENDRO_904 + At4[pp]*DENDRO_905 - grad_1_At3[pp]) + DENDRO_307*(DENDRO_891 + DENDRO_896) - DENDRO_311*(-DENDRO_638 + DENDRO_901) - DENDRO_311*(At2[pp]*DENDRO_903 + At4[pp]*DENDRO_904 + At5[pp]*DENDRO_905 + DENDRO_902) - DENDRO_313*(-DENDRO_650 + DENDRO_890) - DENDRO_313*(At0[pp]*DENDRO_903 + At1[pp]*DENDRO_904 + At2[pp]*DENDRO_905 + DENDRO_889) + DENDRO_836*DENDRO_881 + DENDRO_837*DENDRO_881 + DENDRO_843*DENDRO_874 + DENDRO_845*DENDRO_874 + DENDRO_851*DENDRO_880 - 2.0/3.0*grad_1_K[pp];
//--
mom2[pp] = At2[pp]*DENDRO_875 - At2[pp]*DENDRO_877 - At2[pp]*Gt0[pp] - At4[pp]*DENDRO_878 - At4[pp]*DENDRO_879 - At4[pp]*Gt1[pp] + At5[pp]*DENDRO_66*DENDRO_874 - At5[pp]*Gt2[pp] + DENDRO_298*(-DENDRO_611 + DENDRO_884) + DENDRO_298*(At0[pp]*DENDRO_906 + At1[pp]*DENDRO_907 + At2[pp]*DENDRO_908 + DENDRO_883) + DENDRO_303*(At2[pp]*DENDRO_906 + At4[pp]*DENDRO_907 + At5[pp]*DENDRO_908 - grad_2_At5[pp]) + DENDRO_305*(DENDRO_901 + DENDRO_902) + DENDRO_307*(DENDRO_882 + DENDRO_892) - DENDRO_311*(-DENDRO_631 + DENDRO_900) - DENDRO_311*(At1[pp]*DENDRO_906 + At3[pp]*DENDRO_907 + At4[pp]*DENDRO_908 + DENDRO_899) - DENDRO_313*(DENDRO_886 + DENDRO_898) - DENDRO_313*(DENDRO_887 + DENDRO_897) + DENDRO_838*DENDRO_881 + DENDRO_842*DENDRO_880 + DENDRO_849*DENDRO_881 - DENDRO_852*DENDRO_880 - 2.0/3.0*grad_2_K[pp];
// Dendro: reduced ops: 3696
// Dendro: }}} 
//[[[end]]]        

      }
    }
  }

// deallocate deriv memmory
/*[[[cog
import cog
import bssnDerivs as bssnDerivs

for deriv in bssnDerivs.FUNC_CONS:
    cog.outl("\t free(%s);" %(deriv))

]]]*/
free(grad_0_chi);
free(grad_1_chi);
free(grad_2_chi);
free(grad_0_Gt0);
free(grad_1_Gt0);
free(grad_2_Gt0);
free(grad_0_Gt1);
free(grad_1_Gt1);
free(grad_2_Gt1);
free(grad_0_Gt2);
free(grad_1_Gt2);
free(grad_2_Gt2);
free(grad_0_K);
free(grad_1_K);
free(grad_2_K);
free(grad_0_gt0);
free(grad_1_gt0);
free(grad_2_gt0);
free(grad_0_gt1);
free(grad_1_gt1);
free(grad_2_gt1);
free(grad_0_gt2);
free(grad_1_gt2);
free(grad_2_gt2);
free(grad_0_gt3);
free(grad_1_gt3);
free(grad_2_gt3);
free(grad_0_gt4);
free(grad_1_gt4);
free(grad_2_gt4);
free(grad_0_gt5);
free(grad_1_gt5);
free(grad_2_gt5);
free(grad_0_At0);
free(grad_1_At0);
free(grad_2_At0);
free(grad_0_At1);
free(grad_1_At1);
free(grad_2_At1);
free(grad_0_At2);
free(grad_1_At2);
free(grad_2_At2);
free(grad_0_At3);
free(grad_1_At3);
free(grad_2_At3);
free(grad_0_At4);
free(grad_1_At4);
free(grad_2_At4);
free(grad_0_At5);
free(grad_1_At5);
free(grad_2_At5);
free(grad2_0_0_gt0);
free(grad2_0_1_gt0);
free(grad2_0_2_gt0);
free(grad2_1_1_gt0);
free(grad2_1_2_gt0);
free(grad2_2_2_gt0);
free(grad2_0_0_gt1);
free(grad2_0_1_gt1);
free(grad2_0_2_gt1);
free(grad2_1_1_gt1);
free(grad2_1_2_gt1);
free(grad2_2_2_gt1);
free(grad2_0_0_gt2);
free(grad2_0_1_gt2);
free(grad2_0_2_gt2);
free(grad2_1_1_gt2);
free(grad2_1_2_gt2);
free(grad2_2_2_gt2);
free(grad2_0_0_gt3);
free(grad2_0_1_gt3);
free(grad2_0_2_gt3);
free(grad2_1_1_gt3);
free(grad2_1_2_gt3);
free(grad2_2_2_gt3);
free(grad2_0_0_gt4);
free(grad2_0_1_gt4);
free(grad2_0_2_gt4);
free(grad2_1_1_gt4);
free(grad2_1_2_gt4);
free(grad2_2_2_gt4);
free(grad2_0_0_gt5);
free(grad2_0_1_gt5);
free(grad2_0_2_gt5);
free(grad2_1_1_gt5);
free(grad2_1_2_gt5);
free(grad2_2_2_gt5);
free(grad2_0_0_chi);
free(grad2_0_1_chi);
free(grad2_0_2_chi);
free(grad2_1_1_chi);
free(grad2_1_2_chi);
free(grad2_2_2_chi);
//[[[end]]]

}
